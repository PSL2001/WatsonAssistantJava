var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.792,1,0.924]],["body/components/AppComponent.html",[0,1.377,1,1.606,2,2.181,3,0.919,4,0.783,5,2.006,6,2.006,7,2.006,8,2.006,9,0.783,10,2.418,11,2.006,12,3.108,13,2.692,14,3.106,15,2.577,16,4.32,17,2.577,18,3.91,19,0.783,20,1.603,21,2.41,22,0.783,23,0.06,24,1.247,25,1.452,26,1.452,27,3.106,28,1.698,29,3.043,30,1.247,31,1.072,32,1.072,33,1.698,34,2.006,35,0.919,36,1.247,37,1.452,38,2.577,39,2.577,40,2.006,41,3.005,42,2.006,43,1.603,44,2.006,45,1.072,46,1.698,47,2.006,48,1.072,49,0.783,50,2.006,51,2.006,52,0.044,53,0.044]],["title/modules/AppModule.html",[54,1.463,55,1.463]],["body/modules/AppModule.html",[1,1.786,3,0.849,4,0.723,9,0.723,13,2.072,23,0.06,30,1.975,31,0.991,32,0.991,33,1.569,35,0.849,36,1.153,37,1.342,45,1.664,46,1.569,48,1.697,52,0.042,53,0.042,54,2.072,55,2.843,56,1.342,57,1.569,58,3.304,59,3.304,60,2.951,61,1.854,62,2.235,63,2.235,64,2.235,65,2.235,66,2.254,67,2.951,68,2.235,69,1.854,70,2.813,71,2.951,72,2.951,73,3.715,74,2.235,75,1.854,76,2.813,77,2.813,78,1.569,79,2.813,80,3.715,81,2.235,82,2.813,83,2.813]],["title/modules/AppRoutingModule.html",[54,1.463,66,1.251]],["body/modules/AppRoutingModule.html",[3,1.112,4,0.948,9,0.948,23,0.059,30,1.804,31,1.298,35,1.112,36,1.51,52,0.05,53,0.05,56,1.758,61,2.428,66,2.1,71,2.927,72,3.497,84,3.684,85,3.684,86,4.402,87,3.102,88,2.428,89,1.758,90,3.684]],["title/components/ChatBoxComponent.html",[0,0.792,45,0.924]],["body/components/ChatBoxComponent.html",[0,0.44,1,0.208,2,0.595,3,0.178,4,0.53,5,0.389,6,0.389,7,0.389,8,0.389,9,0.152,11,0.389,12,1.359,13,1.15,15,0.703,17,0.703,19,0.152,20,0.437,21,0.813,22,0.645,23,0.06,24,1.445,25,0.695,26,0.695,28,1.591,30,0.731,31,0.208,32,1.178,33,1.865,34,0.389,35,0.178,36,0.242,37,0.282,38,0.703,39,0.703,40,0.389,41,1.176,42,0.389,43,0.943,44,0.389,45,0.629,46,2.012,47,0.389,48,0.208,49,1.118,50,0.389,51,0.389,52,0.012,53,0.012,78,1.671,88,0.389,89,1.595,91,1.973,92,0.389,93,0.595,94,2.301,95,2.804,96,2.708,97,1.066,98,3.055,99,1.066,100,3.223,101,2.651,102,2.265,103,1.066,104,1.828,105,3.924,106,0.703,107,1.158,108,1.066,109,1.457,110,1.066,111,1.993,112,1.457,113,0.703,114,1.784,115,1.417,116,2.69,117,1.784,118,1.066,119,0.703,120,0.591,121,1.784,122,2.508,123,1.399,124,1.066,125,1.176,126,0.995,127,1.066,128,1.066,129,0.591,130,2.865,131,2.69,132,2.058,133,2.379,134,1.784,135,2.864,136,3.123,137,1.457,138,1.784,139,2.508,140,1.879,141,3.265,142,2.379,143,1.993,144,1.066,145,2.825,146,2.379,147,0.591,148,1.457,149,1.158,150,1.066,151,2.573,152,1.066,153,0.847,154,2.977,155,1.457,156,2.301,157,1.066,158,1.457,159,1.784,160,2.651,161,2.301,162,3.326,163,2.508,164,1.879,165,2.69,166,1.784,167,1.066,168,2.481,169,1.066,170,1.066,171,1.066,172,0.591,173,1.066,174,1.457,175,1.066,176,2.508,177,3.123,178,1.066,179,1.066,180,1.066,181,2.062,182,2.69,183,1.066,184,1.066,185,1.066,186,2.062,187,0.591,188,1.066,189,1.066,190,1.066,191,1.066,192,1.066,193,0.591,194,1.066,195,2.203,196,1.066,197,1.36,198,0.591,199,0.591,200,0.389,201,0.591,202,1.429,203,0.591,204,1.993,205,0.591,206,1.457,207,1.784,208,0.591,209,1.066,210,1.457,211,0.591,212,1.284,213,1.066,214,1.176,215,1.066,216,0.847,217,1.066,218,0.591,219,1.457,220,2.301,221,1.638,222,2.995,223,3.123,224,2.062,225,1.638,226,1.066,227,1.066,228,1.066,229,1.457,230,1.098,231,0.851,232,1.158,233,0.591,234,0.995,235,1.066,236,1.457,237,1.066,238,0.591,239,0.591,240,0.591,241,1.457,242,0.591,243,0.847,244,0.847,245,1.417,246,0.591,247,0.591,248,0.591,249,0.591,250,0.591,251,1.066,252,0.851,253,1.36,254,1.066,255,1.066,256,1.066,257,0.813,258,1.066,259,1.066,260,0.847,261,1.784,262,0.591,263,1.176,264,0.591,265,1.417,266,0.591,267,1.417,268,1.457,269,1.066,270,0.591,271,0.591,272,1.066,273,0.591,274,0.591,275,0.591,276,0.591,277,0.591,278,0.591,279,0.591,280,0.591,281,1.066,282,1.457,283,1.158,284,1.066,285,0.591,286,0.591,287,2.573,288,0.591,289,0.591,290,0.591,291,0.591,292,0.591,293,1.417,294,0.591,295,1.457,296,1.066,297,0.591,298,0.591,299,1.066,300,1.066,301,2.137,302,1.066,303,1.784,304,1.158,305,0.591,306,1.066,307,0.591,308,0.591,309,0.591,310,0.591,311,0.591,312,1.158,313,0.591,314,0.591,315,0.591,316,0.591,317,1.066,318,0.591,319,0.591,320,0.591,321,0.591,322,1.457,323,0.591,324,0.591,325,0.591,326,0.591,327,1.066,328,0.591,329,2.062,330,1.457,331,1.066,332,1.417,333,0.469,334,0.469,335,0.591,336,1.066,337,1.066,338,0.469,339,0.591,340,1.066,341,1.066,342,1.066,343,1.066,344,0.591,345,0.591,346,1.066,347,0.591,348,0.591,349,0.591,350,0.591,351,0.591,352,0.591,353,0.469,354,0.847,355,0.469,356,2.301,357,1.066,358,2.301,359,1.066,360,0.591,361,0.591,362,0.469,363,0.591,364,0.591,365,1.066,366,1.066,367,0.591,368,0.591,369,1.066,370,1.457,371,0.469,372,1.158,373,1.457,374,0.591,375,0.591,376,0.591,377,0.591,378,0.591,379,0.591,380,0.591,381,0.469,382,0.591,383,0.591,384,0.591,385,1.457,386,1.457,387,1.066,388,0.591,389,0.847,390,0.591,391,0.469,392,0.591]],["title/interfaces/DialogNodeOutput.html",[393,1.251,394,1.463]],["body/interfaces/DialogNodeOutput.html",[3,0.853,4,0.958,9,0.727,19,0.727,20,1.527,21,1.577,22,1.072,23,0.061,24,1.977,25,1.349,26,1.349,32,0.996,35,1.259,49,1.14,52,0.042,53,0.042,89,1.349,93,1.577,197,1.349,202,2.336,212,1.989,230,1.989,231,2.301,252,1.989,253,1.989,257,2.326,393,1.778,394,2.57,395,1.863,396,1.577,397,2.96,398,3.179,399,3.179,400,2.245]],["title/interfaces/Message.html",[49,0.674,393,1.251]],["body/interfaces/Message.html",[3,0.773,4,1.146,9,0.658,19,0.658,20,1.429,21,2.375,22,1.248,23,0.061,24,2.1,25,1.221,26,1.221,32,0.902,35,1.197,49,1.182,52,0.04,53,0.04,89,1.221,93,1.428,126,2.67,197,1.221,202,2.284,212,2.193,230,2.193,231,2.031,252,2.193,253,2.193,257,2.564,393,1.663,394,2.485,395,1.686,396,1.428,397,2.769,398,2.806,399,2.806,400,2.033,401,3.486]],["title/components/MessageComponent.html",[0,0.792,48,0.924]],["body/components/MessageComponent.html",[0,1.353,1,0.83,2,1.837,3,0.711,4,0.606,5,1.553,6,1.553,7,1.553,8,1.553,9,0.606,11,1.553,12,2.85,13,2.413,15,2.17,17,2.17,19,0.606,22,0.606,23,0.061,28,2.118,30,1.35,31,0.83,32,1.337,33,2.413,34,2.17,35,0.711,36,0.966,37,1.124,38,2.17,39,2.17,40,1.553,41,2.709,42,1.553,43,1.35,44,1.553,45,0.83,46,1.314,47,1.553,48,1.448,49,1.319,50,1.553,51,1.553,52,0.037,53,0.037,106,2.502,107,3.265,113,2.17,115,3.265,119,2.502,195,2.17,200,1.553,202,1.571,212,1.124,234,1.314,252,1.124,371,3.265,372,3.016,389,1.872,391,1.872,402,1.872,403,3.796,404,3.293,405,3.293,406,3.293,407,2.356,408,3.293,409,3.293,410,3.293,411,3.293,412,3.293,413,2.356,414,2.356,415,2.356,416,3.796,417,2.356,418,2.356,419,3.293,420,2.356,421,2.356,422,2.356]],["title/injectables/MessageService.html",[123,1.463,423,1.463]],["body/injectables/MessageService.html",[3,0.65,4,0.553,9,0.553,14,1.709,19,0.553,22,0.794,23,0.06,24,1.48,28,1.723,30,1.713,31,0.758,32,1.272,35,0.65,36,0.882,43,1.266,49,1.246,52,0.035,53,0.035,81,1.709,89,1.473,93,1.2,95,1.418,96,2.035,98,2.601,100,2.867,101,2.38,102,1.709,104,1.709,113,2.035,119,1.418,123,1.723,125,2.035,126,1.723,132,1.418,135,2.38,140,1.418,141,3.135,143,1.709,145,2.035,149,1.709,151,1.709,153,1.709,160,2.601,164,2.754,200,1.418,202,1.723,204,2.453,243,1.709,260,2.453,265,2.869,283,2.869,301,1.709,312,3.135,423,1.723,424,2.152,425,1.709,426,3.088,427,2.152,428,4.481,429,2.152,430,3.612,431,3.946,432,3.088,433,2.152,434,3.612,435,4.481,436,2.453,437,2.152,438,2.152,439,2.152,440,3.088,441,4.668,442,3.088,443,2.152,444,3.612,445,3.612,446,3.612,447,2.152,448,2.152,449,2.152,450,2.152,451,2.152,452,2.152,453,2.152,454,2.152,455,2.152,456,2.152,457,2.152,458,3.088,459,2.152,460,2.152,461,2.152,462,2.152,463,3.088,464,3.088,465,2.152,466,3.612,467,2.152,468,2.152,469,2.152,470,2.152,471,2.152,472,2.152,473,2.152,474,2.152,475,2.152]],["title/coverage.html",[476,2.816]],["body/coverage.html",[0,1.332,1,1.121,9,0.818,10,2.528,22,0.818,23,0.059,45,1.121,48,1.121,49,0.818,52,0.046,53,0.046,78,2.667,91,3.15,92,3.15,123,1.775,197,1.518,214,2.097,221,2.528,234,1.775,263,2.097,332,3.682,381,3.797,393,1.919,394,1.775,396,2.461,402,2.528,423,1.775,425,2.528,476,2.528,477,3.182,478,3.182,479,3.182,480,3.182,481,3.182,482,3.182,483,4.78,484,2.528,485,2.528,486,3.182,487,3.182,488,3.182,489,3.182,490,3.182,491,3.182,492,3.182,493,3.182,494,2.528,495,3.182,496,3.182]],["title/dependencies.html",[57,1.754,497,1.455]],["body/dependencies.html",[23,0.06,31,1.24,52,0.049,53,0.049,57,1.964,74,3.403,75,2.823,88,2.32,436,2.797,498,3.521,499,5.113,500,3.521,501,3.521,502,3.521,503,3.521,504,3.521,505,3.521,506,3.521,507,4.283,508,3.521,509,3.521,510,3.521,511,3.521,512,3.521,513,3.521,514,3.521,515,3.521]],["title/miscellaneous/functions.html",[516,1.231,517,2.498]],["body/miscellaneous/functions.html",[19,0.783,22,1.006,23,0.052,24,1.603,43,1.603,52,0.044,53,0.044,78,1.698,91,2.006,92,3.108,95,3.005,96,3.005,98,2.006,100,2.847,101,2.006,111,3.106,125,2.577,126,2.181,130,3.622,132,2.577,133,3.106,135,3.005,140,2.577,142,2.418,145,2.847,146,3.106,154,2.418,160,2.006,162,3.432,164,2.006,168,2.418,195,2.577,214,2.847,225,2.418,230,1.452,231,1.866,232,2.418,244,2.418,253,1.866,263,2.847,267,2.418,287,2.418,293,2.418,304,3.106,333,2.418,334,3.106,338,2.418,353,2.418,354,3.106,355,2.418,362,2.418,484,3.106,485,3.106,516,1.698,517,2.418,518,4.559]],["title/index.html",[19,0.568,519,2.207,520,2.207]],["body/index.html",[0,1.304,4,0.783,23,0.044,27,2.418,43,1.247,52,0.044,53,0.044,69,2.006,106,2.006,216,3.106,494,2.418,497,2.006,521,3.91,522,3.043,523,4.32,524,4.32,525,2.418,526,3.043,527,3.043,528,3.91,529,4.716,530,4.908,531,3.043,532,3.043,533,3.043,534,3.043,535,3.043,536,3.043,537,3.043,538,3.043,539,3.043,540,3.043,541,3.043,542,4.32,543,4.32,544,3.043,545,4.559,546,3.043,547,3.043,548,3.043,549,3.043,550,3.91,551,3.91,552,4.559,553,3.043,554,3.91,555,3.043,556,4.826,557,3.043,558,3.043,559,3.043,560,3.91,561,3.043,562,3.043,563,3.043,564,3.043,565,3.043,566,3.043,567,4.32,568,3.043,569,3.043,570,3.043,571,2.006,572,3.043,573,3.043]],["title/modules.html",[56,1.691]],["body/modules.html",[23,0.052,52,0.052,53,0.052,55,2.22,56,1.899,66,1.899,75,2.623,574,3.98,575,3.98,576,4.606,577,3.98,578,3.98]],["title/overview.html",[571,2.336]],["body/overview.html",[1,1.776,2,1.919,23,0.057,37,1.641,45,1.61,48,1.61,52,0.048,53,0.048,54,1.919,55,2.895,56,1.641,57,1.919,58,2.732,59,2.732,60,2.732,61,2.267,62,2.732,63,2.732,64,2.732,65,2.732,66,2.18,67,3.354,68,2.732,69,2.267,234,1.919,245,2.732,395,2.267,423,1.919,571,2.267,579,4.222,580,3.439]],["title/properties.html",[20,1.289,497,1.455]],["body/properties.html",[20,1.665,23,0.056,52,0.053,53,0.053,525,3.227,581,4.062]],["title/routes.html",[87,2.336]],["body/routes.html",[23,0.053,52,0.053,53,0.053,87,2.704]],["title/miscellaneous/variables.html",[516,1.231,582,2.498]],["body/miscellaneous/variables.html",[19,0.948,22,0.948,23,0.06,25,2.1,26,1.758,49,1.132,52,0.05,53,0.05,197,2.1,212,1.758,230,1.758,231,1.758,252,1.758,253,1.758,257,2.055,396,2.055,398,2.428,399,2.428,516,2.055,582,2.927,583,3.684]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":234,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":581,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["007bff",{"_index":421,"title":{},"body":{"components/MessageComponent.html":{}}}],["05s6p4q5lgj.ws",{"_index":454,"title":{},"body":{"injectables/MessageService.html":{}}}],["0px",{"_index":415,"title":{},"body":{"components/MessageComponent.html":{}}}],["1",{"_index":245,"title":{},"body":{"components/ChatBoxComponent.html":{},"overview.html":{}}}],["1.1em",{"_index":420,"title":{},"body":{"components/MessageComponent.html":{}}}],["1.2em",{"_index":422,"title":{},"body":{"components/MessageComponent.html":{}}}],["1.3.5",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":381,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{}}}],["10px",{"_index":372,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["12",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["15.2.0",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["15.2.6",{"_index":526,"title":{},"body":{"index.html":{}}}],["2",{"_index":579,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":580,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":391,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["4.7.3",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":413,"title":{},"body":{"components/MessageComponent.html":{}}}],["6/10",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":377,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["60vh",{"_index":379,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["66",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["absolute",{"_index":375,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["acceder",{"_index":248,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["activamos",{"_index":262,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["activatedroute",{"_index":121,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["actual_component",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["add",{"_index":563,"title":{},"body":{"index.html":{}}}],["ademas",{"_index":169,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["al",{"_index":260,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["algo",{"_index":472,"title":{},"body":{"injectables/MessageService.html":{}}}],["angular",{"_index":523,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/MessageService.html":{}}}],["angular/compiler",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":88,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"dependencies.html":{}}}],["anterior",{"_index":240,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["app.component",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":535,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":66,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apuntando",{"_index":442,"title":{},"body":{"injectables/MessageService.html":{}}}],["aqui",{"_index":463,"title":{},"body":{"injectables/MessageService.html":{}}}],["arr.some(m",{"_index":343,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["array",{"_index":224,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["array.isarray(result",{"_index":226,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["arreglo",{"_index":469,"title":{},"body":{"injectables/MessageService.html":{}}}],["artifacts",{"_index":546,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":316,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["auto",{"_index":383,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["automatically",{"_index":536,"title":{},"body":{"index.html":{}}}],["available",{"_index":578,"title":{},"body":{"modules.html":{}}}],["axios",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["backend",{"_index":441,"title":{},"body":{"injectables/MessageService.html":{}}}],["background",{"_index":370,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["behaviorsubject",{"_index":437,"title":{},"body":{"injectables/MessageService.html":{}}}],["bold",{"_index":418,"title":{},"body":{"components/MessageComponent.html":{}}}],["bootstrap",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["botones",{"_index":184,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["bottom",{"_index":412,"title":{},"body":{"components/MessageComponent.html":{}}}],["botón",{"_index":136,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box",{"_index":108,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["box.component",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["box.component.css",{"_index":109,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.html",{"_index":110,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts",{"_index":92,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["box.component.ts:179",{"_index":129,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:19",{"_index":198,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:190",{"_index":187,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:20",{"_index":199,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:21",{"_index":124,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:38",{"_index":147,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:81",{"_index":193,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:93",{"_index":172,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box/chat",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":576,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":545,"title":{},"body":{"index.html":{}}}],["button",{"_index":358,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["button.removeattribute('disabled",{"_index":364,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["button.setattribute('disabled",{"_index":361,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cambiarlo",{"_index":445,"title":{},"body":{"injectables/MessageService.html":{}}}],["capabilities",{"_index":565,"title":{},"body":{"index.html":{}}}],["capacitor/android",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["capacitor/cli",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["caso",{"_index":312,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["change",{"_index":538,"title":{},"body":{"index.html":{}}}],["chat",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["chatbot",{"_index":365,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["chatboxcomponent",{"_index":45,"title":{"components/ChatBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":570,"title":{},"body":{"index.html":{}}}],["child(even",{"_index":388,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["child(odd",{"_index":387,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["choice",{"_index":559,"title":{},"body":{"index.html":{}}}],["class",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["cli",{"_index":524,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":540,"title":{},"body":{"index.html":{}}}],["color",{"_index":389,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["command",{"_index":560,"title":{},"body":{"index.html":{}}}],["como",{"_index":156,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["componente",{"_index":94,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"overview.html":{}}}],["comprobamos",{"_index":223,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["comprueba",{"_index":304,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["con",{"_index":204,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["condición",{"_index":239,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["conjunto",{"_index":183,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["consola",{"_index":191,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(\"resultado",{"_index":281,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(item.output.generic",{"_index":292,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(messages",{"_index":291,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(this.history",{"_index":328,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["const",{"_index":89,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{}}}],["constructor",{"_index":119,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["constructor(http",{"_index":427,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(private",{"_index":439,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(route",{"_index":120,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["container",{"_index":414,"title":{},"body":{"components/MessageComponent.html":{}}}],["contrario",{"_index":331,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["convertimos",{"_index":286,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["correcta",{"_index":450,"title":{},"body":{"injectables/MessageService.html":{}}}],["coverage",{"_index":476,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creamos",{"_index":207,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cual",{"_index":178,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cualquiera",{"_index":173,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cuando",{"_index":132,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["cumple",{"_index":238,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["de",{"_index":98,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["debería",{"_index":309,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["debug",{"_index":189,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["declarations",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["default_message",{"_index":197,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":284,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["dejara",{"_index":314,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["del",{"_index":140,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desactivamos",{"_index":213,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["description",{"_index":93,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{}}}],["deshabilita",{"_index":353,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":532,"title":{},"body":{"index.html":{}}}],["development",{"_index":527,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":175,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["dialognodeoutput",{"_index":394,"title":{"interfaces/DialogNodeOutput.html":{}},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["diferente",{"_index":473,"title":{},"body":{"injectables/MessageService.html":{}}}],["directamente",{"_index":249,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["directive",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["directives",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":544,"title":{},"body":{"index.html":{}}}],["directory",{"_index":549,"title":{},"body":{"index.html":{}}}],["disableuserinput",{"_index":214,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["disponible",{"_index":448,"title":{},"body":{"injectables/MessageService.html":{}}}],["dist",{"_index":548,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('send",{"_index":359,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["document.getelementbyid('user",{"_index":357,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["documentation",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["dynamic",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":557,"title":{},"body":{"index.html":{}}}],["efefef",{"_index":392,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ejecuta",{"_index":131,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ejemplo",{"_index":460,"title":{},"body":{"injectables/MessageService.html":{}}}],["el",{"_index":100,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["elegir",{"_index":185,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["element",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["elemento",{"_index":308,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["en",{"_index":160,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["enableuserinput",{"_index":263,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["encarga",{"_index":97,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["end",{"_index":556,"title":{},"body":{"index.html":{}}}],["entities",{"_index":398,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["entonces",{"_index":352,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["envia",{"_index":161,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["enviamos",{"_index":215,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["enviar",{"_index":102,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["envía",{"_index":355,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["error",{"_index":337,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["es",{"_index":154,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["escrito",{"_index":158,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["espera",{"_index":458,"title":{},"body":{"injectables/MessageService.html":{}}}],["esta",{"_index":149,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["este",{"_index":164,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["esto",{"_index":174,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["estos",{"_index":470,"title":{},"body":{"injectables/MessageService.html":{}}}],["eu98.gitpod.io/send",{"_index":455,"title":{},"body":{"injectables/MessageService.html":{}}}],["example",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["execute",{"_index":554,"title":{},"body":{"index.html":{}}}],["existe",{"_index":146,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["existeoutputoption",{"_index":484,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["existeoutputoption(item.output.generic.length",{"_index":294,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["existeoutputoption(length",{"_index":333,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["existir",{"_index":315,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["export",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["exports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":330,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["falta",{"_index":307,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ffffff",{"_index":390,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["files",{"_index":539,"title":{},"body":{"index.html":{}}}],["first",{"_index":562,"title":{},"body":{"index.html":{}}}],["font",{"_index":416,"title":{},"body":{"components/MessageComponent.html":{}}}],["forma",{"_index":246,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["forzamos",{"_index":276,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["frontend",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["funcion",{"_index":188,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["función",{"_index":130,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":332,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{}}}],["functions",{"_index":517,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":566,"title":{},"body":{"index.html":{}}}],["generate",{"_index":542,"title":{},"body":{"index.html":{}}}],["generated",{"_index":522,"title":{},"body":{"index.html":{}}}],["generic",{"_index":231,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generic[1].response_type",{"_index":335,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["getbuttonvalue",{"_index":114,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["getbuttonvalue(option",{"_index":128,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["getting",{"_index":519,"title":{"index.html":{}},"body":{}}],["gitpod",{"_index":443,"title":{},"body":{"injectables/MessageService.html":{}}}],["go",{"_index":569,"title":{},"body":{"index.html":{}}}],["graph",{"_index":577,"title":{},"body":{"modules.html":{}}}],["guardamos",{"_index":220,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["guarde",{"_index":167,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ha",{"_index":210,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["habido",{"_index":336,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["habilita",{"_index":362,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["hace",{"_index":153,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["hacemos",{"_index":266,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["height",{"_index":378,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["help",{"_index":567,"title":{},"body":{"index.html":{}}}],["historial",{"_index":168,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["history",{"_index":111,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["history.some(arr",{"_index":342,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hola",{"_index":159,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["html",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["http",{"_index":431,"title":{},"body":{"injectables/MessageService.html":{}}}],["http://localhost:4200",{"_index":534,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":428,"title":{},"body":{"injectables/MessageService.html":{}}}],["httpclientmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["https://8080",{"_index":451,"title":{},"body":{"injectables/MessageService.html":{}}}],["https://placehold.it/300x300",{"_index":318,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hubiera",{"_index":157,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["identifier",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["iguales",{"_index":341,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["image",{"_index":303,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["imagen",{"_index":182,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["imagenes",{"_index":320,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["implements",{"_index":106,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["importar",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imprime",{"_index":190,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["inicia",{"_index":150,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["inicial",{"_index":208,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["inicializa",{"_index":148,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["init",{"_index":408,"title":{},"body":{"components/MessageComponent.html":{}}}],["initialmessage",{"_index":211,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["injectable",{"_index":423,"title":{"injectables/MessageService.html":{}},"body":{"injectables/MessageService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":424,"title":{},"body":{"injectables/MessageService.html":{}}}],["input",{"_index":195,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"miscellaneous/functions.html":{}}}],["input.removeattribute('disabled",{"_index":363,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["input.setattribute('disabled",{"_index":360,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["inputs",{"_index":405,"title":{},"body":{"components/MessageComponent.html":{}}}],["intents",{"_index":399,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":393,"title":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["interfaces",{"_index":395,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"overview.html":{}}}],["item.output",{"_index":235,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic",{"_index":236,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic.length",{"_index":237,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].options",{"_index":258,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].response_type",{"_index":254,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].source",{"_index":255,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].text",{"_index":251,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].title",{"_index":256,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].options",{"_index":298,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].response_type",{"_index":296,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].text",{"_index":323,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].title",{"_index":297,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["json",{"_index":282,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["json.stringify(result",{"_index":285,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["karma",{"_index":555,"title":{},"body":{"index.html":{}}}],["la",{"_index":141,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["label",{"_index":400,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}}}],["las",{"_index":319,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["le",{"_index":306,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["legend",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"overview.html":{}}}],["length",{"_index":232,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":367,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["literal",{"_index":401,"title":{},"body":{"interfaces/Message.html":{}}}],["llama",{"_index":354,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["llegan",{"_index":269,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["lo",{"_index":151,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["los",{"_index":103,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["m.response_type",{"_index":346,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["m.source",{"_index":348,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["m.title",{"_index":344,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["manda",{"_index":138,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["mandamos",{"_index":259,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["margin",{"_index":371,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["matching",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mayor",{"_index":233,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["mensaje",{"_index":162,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["mensajes",{"_index":104,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["message",{"_index":49,"title":{"interfaces/Message.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message.component.css",{"_index":403,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.component.html",{"_index":404,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.owner",{"_index":409,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.response_type",{"_index":302,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["message.source",{"_index":317,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["message.text",{"_index":410,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.title",{"_index":411,"title":{},"body":{"components/MessageComponent.html":{}}}],["message/message.component",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["message=${encodeuricomponent(message.text",{"_index":465,"title":{},"body":{"injectables/MessageService.html":{}}}],["message=hola",{"_index":461,"title":{},"body":{"injectables/MessageService.html":{}}}],["messagecomponent",{"_index":48,"title":{"components/MessageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messages",{"_index":225,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["messages.foreach((item",{"_index":228,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[0].response_type",{"_index":350,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[0].source",{"_index":349,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[1].response_type",{"_index":347,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[1].title",{"_index":345,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messageservice",{"_index":123,"title":{"injectables/MessageService.html":{}},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["methods",{"_index":113,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["mi",{"_index":457,"title":{},"body":{"injectables/MessageService.html":{}}}],["miscellaneous",{"_index":516,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":397,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}}}],["models/message",{"_index":200,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":568,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":99,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["mostrarlo",{"_index":170,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":533,"title":{},"body":{"index.html":{}}}],["need",{"_index":561,"title":{},"body":{"index.html":{}}}],["new",{"_index":494,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":530,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":115,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["ni",{"_index":351,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["noexisteenhistorial",{"_index":485,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["noexisteenhistorial([message",{"_index":299,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["noexisteenhistorial(messages",{"_index":338,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["none",{"_index":369,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["nos",{"_index":165,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["nuevo",{"_index":241,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["number",{"_index":334,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["o",{"_index":143,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["objeto",{"_index":203,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["objetos",{"_index":272,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["observable",{"_index":435,"title":{},"body":{"injectables/MessageService.html":{}}}],["oninit",{"_index":107,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["onsubmit",{"_index":116,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["onsubmit(res",{"_index":171,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option",{"_index":142,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["option.label",{"_index":366,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option.value",{"_index":325,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option.value.input",{"_index":326,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option.value.input.text",{"_index":327,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["optional",{"_index":126,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["optionmessage",{"_index":295,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["options",{"_index":257,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":313,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["otras",{"_index":271,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["otro",{"_index":462,"title":{},"body":{"injectables/MessageService.html":{}}}],["out",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":230,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["overflow",{"_index":382,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["overview",{"_index":571,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":252,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":497,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":373,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["page",{"_index":573,"title":{},"body":{"index.html":{}}}],["para",{"_index":163,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["param",{"_index":202,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["parameters",{"_index":125,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["parametro",{"_index":459,"title":{},"body":{"injectables/MessageService.html":{}}}],["pasa",{"_index":324,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["pasar",{"_index":310,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["pero",{"_index":311,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["peticion",{"_index":468,"title":{},"body":{"injectables/MessageService.html":{}}}],["platform",{"_index":558,"title":{},"body":{"index.html":{}}}],["podemos",{"_index":247,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["poder",{"_index":288,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["por",{"_index":283,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["posición",{"_index":250,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["position",{"_index":374,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["post",{"_index":474,"title":{},"body":{"injectables/MessageService.html":{}}}],["predeterminado",{"_index":205,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["preferencia",{"_index":447,"title":{},"body":{"injectables/MessageService.html":{}}}],["primero",{"_index":305,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["printhistory",{"_index":117,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["private",{"_index":206,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["project",{"_index":521,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"properties.html":{}}}],["providedin",{"_index":438,"title":{},"body":{"injectables/MessageService.html":{}}}],["providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["psl2001",{"_index":452,"title":{},"body":{"injectables/MessageService.html":{}}}],["puede",{"_index":179,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["puedes",{"_index":444,"title":{},"body":{"injectables/MessageService.html":{}}}],["pulsa",{"_index":134,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["que",{"_index":95,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["query",{"_index":265,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["query1",{"_index":196,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["querystring",{"_index":464,"title":{},"body":{"injectables/MessageService.html":{}}}],["recibe",{"_index":244,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["recibimos",{"_index":219,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["recorremos",{"_index":227,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["reference",{"_index":572,"title":{},"body":{"index.html":{}}}],["reload",{"_index":537,"title":{},"body":{"index.html":{}}}],["res",{"_index":186,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["res.options?.values",{"_index":274,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["res.text",{"_index":275,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["reset",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responda",{"_index":166,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["response",{"_index":112,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["response_type",{"_index":253,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["respuesta",{"_index":177,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["result",{"_index":222,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["resultado",{"_index":467,"title":{},"body":{"injectables/MessageService.html":{}}}],["results",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":466,"title":{},"body":{"injectables/MessageService.html":{}}}],["retornan",{"_index":471,"title":{},"body":{"injectables/MessageService.html":{}}}],["return",{"_index":301,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["returns",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["right",{"_index":384,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/MessageService.html":{}}}],["root'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["route",{"_index":127,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["router",{"_index":122,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["routermodule",{"_index":86,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":90,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":87,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":85,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":385,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["run",{"_index":529,"title":{},"body":{"index.html":{}}}],["running",{"_index":550,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":449,"title":{},"body":{"injectables/MessageService.html":{}}}],["rxjs",{"_index":436,"title":{},"body":{"injectables/MessageService.html":{},"dependencies.html":{}}}],["sabemos",{"_index":242,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["scaffolding",{"_index":541,"title":{},"body":{"index.html":{}}}],["se",{"_index":96,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["sea",{"_index":277,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["sean",{"_index":340,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["see",{"_index":356,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["segundo",{"_index":293,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["send",{"_index":434,"title":{},"body":{"injectables/MessageService.html":{}}}],["sendmessage",{"_index":426,"title":{},"body":{"injectables/MessageService.html":{}}}],["sendmessage(message",{"_index":432,"title":{},"body":{"injectables/MessageService.html":{}}}],["ser",{"_index":180,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["serve",{"_index":531,"title":{},"body":{"index.html":{}}}],["server",{"_index":528,"title":{},"body":{"index.html":{}}}],["service",{"_index":430,"title":{},"body":{"injectables/MessageService.html":{}}}],["services/message.service",{"_index":201,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["servicio",{"_index":217,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["si",{"_index":145,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["siempre",{"_index":243,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["simplemente",{"_index":137,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["simular",{"_index":155,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["size",{"_index":419,"title":{},"body":{"components/MessageComponent.html":{}}}],["solo",{"_index":209,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"index.html":{}}}],["src/.../chat",{"_index":518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../message.ts",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":84,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/chat",{"_index":91,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/message/message.component.ts",{"_index":402,"title":{},"body":{"components/MessageComponent.html":{},"coverage.html":{}}}],["src/app/message/message.component.ts:22",{"_index":406,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/message/message.component.ts:28",{"_index":407,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/models/message.ts",{"_index":396,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/message.service.ts",{"_index":425,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/services/message.service.ts:15",{"_index":429,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:26",{"_index":433,"title":{},"body":{"injectables/MessageService.html":{}}}],["started",{"_index":520,"title":{"index.html":{}},"body":{}}],["statements",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":547,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["strings",{"_index":270,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["striped:nth",{"_index":386,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["style",{"_index":368,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["submitmessage",{"_index":118,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["submitmessage(query1",{"_index":192,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["support",{"_index":574,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":575,"title":{},"body":{"modules.html":{}}}],["table",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["test",{"_index":553,"title":{},"body":{"index.html":{}}}],["testing",{"_index":564,"title":{},"body":{"index.html":{}}}],["tests",{"_index":552,"title":{},"body":{"index.html":{}}}],["text",{"_index":212,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"miscellaneous/variables.html":{}}}],["textmessage",{"_index":322,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["texto",{"_index":181,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.history",{"_index":300,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.history.push([message",{"_index":261,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.history.push([this.message",{"_index":279,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.http.get(url",{"_index":475,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.message",{"_index":278,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.messageservice.sendmessage(initialmessage).subscribe((result",{"_index":218,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.messageservice.sendmessage(this.message).subscribe((result",{"_index":280,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.onsubmit(query1",{"_index":264,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tiene",{"_index":229,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tipo",{"_index":287,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}}}],["titulo",{"_index":339,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["toma",{"_index":194,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["top",{"_index":376,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["trabajar",{"_index":289,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["true",{"_index":329,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tslib",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":446,"title":{},"body":{"injectables/MessageService.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":273,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["un",{"_index":135,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":176,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["unico",{"_index":152,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["unit",{"_index":551,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":290,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["url",{"_index":440,"title":{},"body":{"injectables/MessageService.html":{}}}],["use",{"_index":543,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":133,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["va",{"_index":456,"title":{},"body":{"injectables/MessageService.html":{}}}],["vacío",{"_index":144,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["valor",{"_index":139,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["variable",{"_index":221,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{}}}],["variables",{"_index":582,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veces",{"_index":268,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["version",{"_index":525,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":216,"title":{},"body":{"components/ChatBoxComponent.html":{},"index.html":{}}}],["vienen",{"_index":321,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["void",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["watson",{"_index":105,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["watsonassistant",{"_index":453,"title":{},"body":{"injectables/MessageService.html":{}}}],["weight",{"_index":417,"title":{},"body":{"components/MessageComponent.html":{}}}],["width",{"_index":380,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["y",{"_index":101,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["ya",{"_index":267,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'frontend'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n/**\n * App component\n * @returns void\n * @example \n */\nexport class AppComponent {\n  title = 'frontend';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'MessageComponent', 'selector': 'app-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatBoxComponent\n\nChatBoxComponent\n\nAppModule -->\n\nChatBoxComponent->AppModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nAppModule -->\n\nMessageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChatBoxComponent\n                        \n                        \n                            MessageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n// Importar MessageComponent\nimport { MessageComponent } from './message/message.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatBoxComponent,\n    MessageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n/**\n * App module\n * @returns void\n */\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatBoxComponent.html":{"url":"components/ChatBoxComponent.html","title":"component - ChatBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chat-box/chat-box.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que se encarga de mostrar el chat y de enviar los mensajes a Watson\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-box\n            \n\n\n\n            \n                styleUrls\n                ./chat-box.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chat-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                history\n                            \n                            \n                                message\n                            \n                            \n                                response\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                printHistory\n                            \n                            \n                                submitMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/chat-box/chat-box.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getButtonValue\n                        \n                    \n                \n            \n            \n                \ngetButtonValue(option: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:179\n                \n            \n\n\n            \n                \n                    Función que se ejecuta cuando el usuario pulsa un botón\nSimplemente manda el valor del botón a la función onSubmit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        el valor del botón o un string vacío si no existe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:38\n                \n            \n\n\n            \n                \n                    Inicializa el componente\nEsta función se ejecuta cuando se inicia el componente\nLo unico que hace es simular como si el usuario hubiera escrito \"Hola\" en el chat\ny envia el mensaje a Watson, para que este nos responda y se guarde en el historial\nademas de mostrarlo en el chat\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(res: Message | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:93\n                \n            \n\n\n            \n                \n                    Función que se ejecuta cuando el usuario manda un mensaje cualquiera a Watson\nEsto nos devuelve una respuesta de watson, la cual puede ser un texto, una imagen o un conjunto de botones para elegir\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Message | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mensaje que se envia a Watson\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        printHistory\n                        \n                    \n                \n            \n            \n                \nprintHistory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:190\n                \n            \n\n\n            \n                \n                    Funcion de debug, imprime el historial en la consola\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitMessage\n                        \n                    \n                \n            \n            \n                \nsubmitMessage(query1: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:81\n                \n            \n\n\n            \n                \n                    Función que se ejecuta cuando se pulsa el botón de enviar\nToma el valor del input y lo envia a la función onSubmit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/chat-box/chat-box.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : { ...DEFAULT_MESSAGE }\n                    \n                \n                    \n                        \n                                Defined in src/app/chat-box/chat-box.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/chat-box/chat-box.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Message, DEFAULT_MESSAGE } from '../models/message';\nimport { MessageService } from '../services/message.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/**\n * Componente que se encarga de mostrar el chat y de enviar los mensajes a Watson\n * @param void\n * @returns void\n * @example \n */\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css']\n})\nexport class ChatBoxComponent implements OnInit {\n\n  message: Message = { ...DEFAULT_MESSAGE }; // Inicializa el objeto de mensaje con el valor predeterminado\n  response: Message[] = [];\n  history: Message[][] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private messageService: MessageService\n  ) { }\n\n  /**\n   * Inicializa el componente\n   * Esta función se ejecuta cuando se inicia el componente\n   * Lo unico que hace es simular como si el usuario hubiera escrito \"Hola\" en el chat\n   * y envia el mensaje a Watson, para que este nos responda y se guarde en el historial\n   * ademas de mostrarlo en el chat\n   * @param void\n   * @returns void\n   */\n  ngOnInit() {\n    // Creamos un mensaje inicial para que Watson nos responda\n    // Este mensaje es solo para simular que el usuario ha escrito \"Hola\" en el chat y que Watson nos responda\n    const initialMessage: Message = {\n      ...DEFAULT_MESSAGE,\n      text: 'Hola'\n    };\n    // Desactivamos el botón de enviar y el input\n    disableUserInput();\n    // Enviamos el mensaje a Watson, via el servicio de mensajes\n    this.messageService.sendMessage(initialMessage).subscribe((result: Message[]) => {\n      // Recibimos la respuesta de Watson y la guardamos en la variable result\n      // Comprobamos si result es un array, si lo es, lo guardamos en la variable messages\n      const messages = Array.isArray(result) ? result : [result];\n      // Recorremos el array de mensajes\n      messages.forEach((item: Message) => {\n        // Comprobamos si el mensaje tiene un output y si este output tiene un generic y si este generic tiene un length mayor que 0\n        if (item.output && item.output.generic && item.output.generic.length > 0) {\n          // Si se cumple la condición anterior, creamos un nuevo mensaje con el texto de la respuesta de Watson\n          // Como sabemos que siempre se recibe 1 mensaje de watson de esta forma, podemos acceder directamente a la posición 0 del array\n          const message: Message = {\n            ...DEFAULT_MESSAGE,\n            text: item.output.generic[0].text,\n            owner: 'Watson: ',\n            response_type: item.output.generic[0].response_type,\n            source: item.output.generic[0].source || '',\n            title: item.output.generic[0].title || '',\n            options: item.output.generic[0].options || []\n          };\n          //Mandamos el mensaje al historial\n          this.history.push([message]);\n          //Activamos el botón de enviar y el input\n          enableUserInput();\n        }\n      });\n    });\n  }\n\n  /**\n   * Función que se ejecuta cuando se pulsa el botón de enviar\n   * Toma el valor del input y lo envia a la función onSubmit\n   * @param query1\n   */\n  submitMessage(query1: string) {\n    // Desactivamos el botón de enviar y el input\n    disableUserInput();\n    this.onSubmit(query1);\n  }\n\n  /**\n   * Función que se ejecuta cuando el usuario manda un mensaje cualquiera a Watson\n   * Esto nos devuelve una respuesta de watson, la cual puede ser un texto, una imagen o un conjunto de botones para elegir\n   * @param res Mensaje que se envia a Watson\n   * @returns void\n   */\n  onSubmit(res: Message | string) {\n    // Comprobamos si res es un string, si lo es, lo guardamos en la variable query, hacemos esto ya a veces nos llegan strings y otras veces objetos\n    const query = typeof res === 'string' ? res : res.options?.values || res.text || '';\n    // Como a veces nos llegan objetos, simplemente forzamos a que query sea un string\n    this.message = {\n      ...DEFAULT_MESSAGE,\n      response_type: 'text',\n      text: query as string,\n      owner: 'Usuario: '\n    };\n\n    // Mandamos el mensaje al historial\n    this.history.push([this.message]);\n\n    // Enviamos el mensaje a Watson, via el servicio de mensajes\n    this.messageService.sendMessage(this.message).subscribe((result: Message[]) => {\n      // Recibimos la respuesta de Watson y la guardamos en la variable result\n      console.log(\"Resultado de la respuesta como JSON (respuesta por defecto): \" + JSON.stringify(result));\n      // Con result, lo convertimos en tipo Message para poder trabajar con el\n      const message = result as unknown as Message;\n      console.log(\"Resultado de la respuesta como Message: \" + message);\n\n      // Comprobamos si result es un array, si lo es, lo guardamos en la variable messages\n      const messages = Array.isArray(result) ? result : [result];\n      console.log(messages);\n      // Recorremos el array de mensajes\n      messages.forEach((item: Message) => {\n        if (item.output && item.output.generic && item.output.generic.length > 0) {\n          console.log(item.output.generic)\n          const message: Message = {\n            ...DEFAULT_MESSAGE,\n            text: item.output.generic[0].text,\n            owner: 'Watson: ',\n            response_type: item.output.generic[0].response_type,\n            source: item.output.generic[0].source || '',\n            title: item.output.generic[0].title || '',\n            options: item.output.generic[0].options || []\n          };\n          //Comprobamos si existe un segundo output y si este es de tipo option\n          if (existeOutputOption(item.output.generic.length, item.output.generic)) {\n            //Si existe, creamos un nuevo mensaje con el segundo output\n            const optionMessage: Message = {\n              ...DEFAULT_MESSAGE,\n              response_type: item.output.generic[1].response_type,\n              title: item.output.generic[1].title,\n              options: item.output.generic[1].options,\n            }\n            //Comprobamos si el mensaje ya existe en el historial\n            if (noExisteEnHistorial([message, optionMessage], this.history, item.output.generic[1].response_type)) {\n              this.history.push([message, optionMessage]);\n              return;\n            }\n          }\n          //Comprobamos si el mensaje es una imagen\n          if (message.response_type === 'image') {\n            //Comprueba primero si la imagen le falta un elemento source. No debería de pasar, pero en caso de que la imagen original dejara de existir, se le asigna una imagen por defecto\n            if (message.source === '') {\n              message.source = 'https://placehold.it/300x300';\n            }\n            //Las imagenes siempre vienen con un mensaje de texto, por lo que creamos un nuevo mensaje con el texto de la imagen\n            const textMessage: Message = {\n              ...DEFAULT_MESSAGE,\n              text: item.output.generic[1].text,\n              owner: 'Watson: ',\n              response_type: 'text'\n            };\n            //Comprobamos si el mensaje ya existe en el historial\n            if (noExisteEnHistorial([message, textMessage], this.history, message.response_type)) {\n              this.history.push([message, textMessage]);\n            }\n          } else {\n            //Guardamos el mensaje en el historial, este else solo pasa cuando no es una imagen o un option\n            this.history.push([message]);\n          }\n          enableUserInput();\n        }\n      });\n    });\n  }\n\n  /**\n   * Función que se ejecuta cuando el usuario pulsa un botón\n   * Simplemente manda el valor del botón a la función onSubmit\n   * @param option\n   * @returns el valor del botón o un string vacío si no existe\n   */\n  getButtonValue(option: any): string {\n    if (option.value && option.value.input && option.value.input.text) {\n      return option.value.input.text;\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Funcion de debug, imprime el historial en la consola\n   */\n  printHistory() {\n    console.log(this.history);\n  }\n\n}\n/**\n * Función que comprueba si existe un segundo output y si este es de tipo option\n *\n * @param length\n * @param generic\n * @returns  true si existe un segundo output y este es de tipo option, false en caso contrario\n */\nfunction existeOutputOption(length: number, generic: any) {\n  if (length > 1) {\n    if (generic[1].response_type === 'option') {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Función que comprueba si un mensaje ya existe en el historial\n * @param messages\n * @param history\n * @param response_type\n * @returns true si el mensaje no existe en el historial, false en caso contrario o -1 si ha habido un error\n */\nfunction noExisteEnHistorial(messages: Message[], history: Message[][], response_type: string) {\n  //Comprobamos el tipo de respuesta que recibimos\n  if (response_type === 'option') {\n    //Si es de tipo option, comprobamos que el titulo y el tipo de respuesta sean iguales\n    return !history.some(arr => arr.some(m => m.title === messages[1].title && m.response_type === messages[1].response_type));\n  }\n  if (response_type === 'image') {\n    //Si es de tipo image, comprobamos que el source y el tipo de respuesta sean iguales\n    return !history.some(arr => arr.some(m => m.source === messages[0].source && m.response_type === messages[0].response_type));\n  }\n  //Si no es de tipo option ni de tipo image, entonces es de tipo text o ha habido un error\n  return -1;\n}\n/**\n * Función que deshabilita el input del usuario\n * Se llama cuando se envía un mensaje\n * @returns void\n * @see enableUserInput\n * @see onSubmit\n * @see getButtonValue\n */\nfunction disableUserInput() {\n  const input = document.getElementById('user-input');\n  const button = document.getElementById('send-button');\n  if (input && button) {\n    input.setAttribute('disabled', 'true');\n    button.setAttribute('disabled', 'true');\n  }\n}\n/**\n * Función que habilita el input del usuario\n * Se llama cuando se recibe un mensaje\n * @returns void\n * @see disableUserInput\n * @see onSubmit\n * @see getButtonValue\n */\nfunction enableUserInput() {\n  const input = document.getElementById('user-input');\n  const button = document.getElementById('send-button');\n  if (input && button) {\n    input.removeAttribute('disabled');\n    button.removeAttribute('disabled');\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      ChatBot\n      \n\n      \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                \n                \n                  {{ option.label }}\n                \n              \n            \n          \n          \n        \n      \n\n      {{ history | json }} -->\n\n      \n        \n        Enviar\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./chat-box.component.css\n                \n                .chat {\n  list-style: none;\n  background: none;\n  margin: 10px;\n  padding: 10px;\n  position: absolute;\n  top: 60px;\n  height: 60vh;\n  width: 100%;\n  overflow-y: auto;\n  padding-right: 10px;\n}\n\n.row-striped:nth-child(odd),\n.row-striped:nth-child(even) {\n  background-color: #ffffff;\n  padding: 3px;\n}\n\n.row-striped:nth-child(odd) {\n  background-color: #efefef;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ChatBot                                                                                                                                                                                                  {{ option.label }}                                                                                  {{ history | json }} -->                      Enviar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'MessageComponent', 'selector': 'app-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogNodeOutput.html":{"url":"interfaces/DialogNodeOutput.html","title":"interface - DialogNodeOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogNodeOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.ts\n        \n\n\n            \n                Description\n            \n            \n                DialogNodeOutput model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            generic\n                                        \n                                \n                                \n                                        \n                                            intents\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generic:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intents:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  response_type: string;\n  source?: string;\n  text: string;\n  owner: string;\n  title?: string;\n  options?: { label: string, value: string }[];\n  output?: DialogNodeOutput;\n}\n/**\n * DialogNodeOutput model\n * @param entities: any[]\n * @param generic: any[]\n * @param intents: any[]\n */\nexport interface DialogNodeOutput {\n  entities: any[];\n  generic: any[];\n  intents: any[];\n}\n/**\n * Default message\n * @param response_type: ''\n * @param text: ''\n * @param owner: ''\n * @param options: []\n * @param output: { entities: [], generic: [], intents: [] }\n * @returns Message\n */\nexport const DEFAULT_MESSAGE: Message = {\n  response_type: '',\n  text: '',\n  owner: '',\n  options: [],\n  output: { entities: [], generic: [], intents: [] }\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.ts\n        \n\n\n            \n                Description\n            \n            \n                Message model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            response_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         DialogNodeOutput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DialogNodeOutput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  response_type: string;\n  source?: string;\n  text: string;\n  owner: string;\n  title?: string;\n  options?: { label: string, value: string }[];\n  output?: DialogNodeOutput;\n}\n/**\n * DialogNodeOutput model\n * @param entities: any[]\n * @param generic: any[]\n * @param intents: any[]\n */\nexport interface DialogNodeOutput {\n  entities: any[];\n  generic: any[];\n  intents: any[];\n}\n/**\n * Default message\n * @param response_type: ''\n * @param text: ''\n * @param owner: ''\n * @param options: []\n * @param output: { entities: [], generic: [], intents: [] }\n * @returns Message\n */\nexport const DEFAULT_MESSAGE: Message = {\n  response_type: '',\n  text: '',\n  owner: '',\n  options: [],\n  output: { entities: [], generic: [], intents: [] }\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageComponent.html":{"url":"components/MessageComponent.html","title":"component - MessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/message/message.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message\n            \n\n\n\n            \n                styleUrls\n                ./message.component.css\n            \n\n\n\n            \n                templateUrl\n                ./message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/message/message.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         Message\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/message/message.component.ts:22\n                            \n                        \n                \n                    \n                        Message component\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/message/message.component.ts:28\n                \n            \n\n\n            \n                \n                    On init\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Message } from '../models/message';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\n/**\n * Message component\n * @param message: Message\n * @returns void\n * @example \n * @example \n * @implements OnInit\n */\nexport class MessageComponent implements OnInit {\n  /**\n   * Message component\n   * @param message: Message\n   */\n  @Input() message!: Message;\n  constructor() {}\n  /**\n   * On init\n   * @returns void\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n\n\n    \n\n    \n        \n    {{ message.owner }}\n    \n    {{ message.text }}\n    {{ message.title }}\n  \n  \n    \n\n    \n                \n                    ./message.component.css\n                \n                .message {\n    margin-bottom: 5px;\n  }\n  \n  .message-container {\n    margin: 10px 10px 10px 0px;\n  }\n  \n  .message-owner {\n    font-weight: bold;\n    font-size: 1.1em;\n    color: #007bff;\n    margin-bottom: 3px;\n  }\n  \n  .message-text {\n    margin: 0;\n    font-size: 1.2em;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ message.owner }}        {{ message.text }}    {{ message.title }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'MessageComponent', 'selector': 'app-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message.service.ts:15\n                            \n                        \n\n                \n                    \n                            Message service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : HttpClient\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:26\n                \n            \n\n\n            \n                \n                    Send message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Message } from '../models/message';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Message service\n * @param http: HttpClient\n * @returns Observable\n */\nexport class MessageService {\n  /**\n   * Message service\n   * @param http: HttpClient\n   */\n  constructor(private http: HttpClient) { }\n  /**\n   * Send message\n   * @param message\n   * @returns Observable\n   */\n  sendMessage(message: Message): Observable {\n    /**\n     * La url del backend. En este caso esta apuntando al backend de Gitpod.\n     * Puedes cambiarlo por el backend de tu preferencia. Siempre y cuando\n     * el backend este disponible y este apuntando a la ruta correcta (en este caso /send).\n     */\n    const url = `https://8080-psl2001-watsonassistant-05s6p4q5lgj.ws-eu98.gitpod.io/send/`;\n    /**\n     * La query string que se va a enviar al backend.\n     * En mi caso, el backend espera un query string con el parametro message.\n     * Ejemplo: ?message=Hola\n     * Si tu backend espera otro query string, puedes cambiarlo aqui.\n     */\n    const queryString = `?message=${encodeURIComponent(message.text)}`;\n    /**\n     * Retorna un observable con el resultado de la peticion.\n     * En este caso, el backend retorna un arreglo de mensajes.\n     * Y estos se retornan por GET.\n     * Si tu backend retorna algo diferente o lo hace por POST, puedes cambiarlo aqui.\n     */\n    return this.http.get(url + queryString);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            component\n            ChatBoxComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            disableUserInput\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            enableUserInput\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            existeOutputOption\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            noExisteEnHistorial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/message/message.component.ts\n            \n            component\n            MessageComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            interface\n            DialogNodeOutput\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            interface\n            Message\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            variable\n            DEFAULT_MESSAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @capacitor/android : ^4.7.3\n        \n            @capacitor/cli : ^4.8.0\n        \n            @capacitor/core : ^4.8.0\n        \n            axios : ^1.3.5\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            disableUserInput   (src/.../chat-box.component.ts)\n                        \n                        \n                            enableUserInput   (src/.../chat-box.component.ts)\n                        \n                        \n                            existeOutputOption   (src/.../chat-box.component.ts)\n                        \n                        \n                            noExisteEnHistorial   (src/.../chat-box.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/chat-box/chat-box.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        disableUserInput\n                        \n                    \n                \n            \n            \n                \ndisableUserInput()\n                \n            \n\n\n\n\n            \n                \n                    Función que deshabilita el input del usuario\nSe llama cuando se envía un mensaje\n\n\n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableUserInput\n                        \n                    \n                \n            \n            \n                \nenableUserInput()\n                \n            \n\n\n\n\n            \n                \n                    Función que habilita el input del usuario\nSe llama cuando se recibe un mensaje\n\n\n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existeOutputOption\n                        \n                    \n                \n            \n            \n                \nexisteOutputOption(length: number, generic: any)\n                \n            \n\n\n\n\n            \n                \n                    Función que comprueba si existe un segundo output y si este es de tipo option\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    generic\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noExisteEnHistorial\n                        \n                    \n                \n            \n            \n                \nnoExisteEnHistorial(messages, history, response_type: string)\n                \n            \n\n\n\n\n            \n                \n                    Función que comprueba si un mensaje ya existe en el historial\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    history\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response_type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 15.2.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatBoxComponent\n\nChatBoxComponent\n\nAppModule -->\n\nChatBoxComponent->AppModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nAppModule -->\n\nMessageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_MESSAGE   (src/.../message.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/message.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : {\n  response_type: '',\n  text: '',\n  owner: '',\n  options: [],\n  output: { entities: [], generic: [], intents: [] }\n}\n                    \n                \n\n            \n                \n                    Default message\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
