var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.792,1,0.924]],["body/components/AppComponent.html",[0,1.295,1,1.597,2,2.159,3,0.904,4,0.77,5,1.974,6,1.974,7,1.974,8,1.974,9,0.77,10,2.38,11,1.974,12,3.092,13,2.618,14,3.075,15,2.551,16,4.288,17,2.551,18,3.87,19,0.77,20,1.586,21,2.392,22,0.77,23,0.059,24,1.429,25,1.974,26,1.429,27,3.075,28,1.671,29,2.996,30,1.228,31,1.055,32,0.904,33,1.228,34,1.429,35,2.551,36,2.551,37,1.974,38,2.987,39,1.974,40,1.586,41,1.974,42,1.055,43,1.671,44,1.974,45,1.055,46,0.77,47,1.974,48,1.974,49,0.044,50,0.044]],["title/modules/AppModule.html",[51,1.463,52,1.463]],["body/modules/AppModule.html",[1,1.777,3,0.822,4,0.7,9,0.7,13,1.519,23,0.06,30,1.959,31,0.96,32,0.822,33,1.116,34,1.3,42,1.649,43,1.519,45,1.684,49,0.041,50,0.041,51,1.519,52,2.831,53,1.3,54,1.519,55,3.251,56,3.251,57,2.888,58,1.795,59,2.164,60,2.164,61,2.164,62,2.164,63,2.233,64,2.888,65,2.164,66,1.795,67,2.724,68,2.888,69,2.888,70,3.636,71,2.164,72,1.795,73,2.724,74,2.724,75,1.519,76,2.724,77,3.636,78,2.164,79,2.724,80,2.724]],["title/modules/AppRoutingModule.html",[51,1.463,63,1.251]],["body/modules/AppRoutingModule.html",[3,1.09,4,0.928,9,0.928,23,0.059,30,1.782,31,1.272,32,1.09,33,1.48,49,0.049,50,0.049,53,1.723,58,2.379,63,2.075,68,2.868,69,3.455,81,3.61,82,3.61,83,4.349,84,3.076,85,2.379,86,1.723,87,3.61]],["title/components/ChatBoxComponent.html",[0,0.792,42,0.924]],["body/components/ChatBoxComponent.html",[0,0.414,1,0.193,2,0.557,3,0.166,4,0.504,5,0.362,6,0.362,7,0.362,8,0.362,9,0.141,11,0.362,12,1.291,13,1.093,15,0.658,17,0.658,19,0.141,20,0.409,21,0.765,22,0.617,23,0.06,24,1.633,25,0.904,26,0.654,28,1.529,30,0.692,31,0.193,32,0.166,33,0.225,34,0.262,35,0.658,36,0.658,37,0.362,38,1.112,39,0.362,40,0.899,41,0.362,42,0.595,43,1.86,44,0.362,45,0.193,46,1.098,47,0.362,48,0.362,49,0.011,50,0.011,75,1.609,85,0.362,86,1.544,88,1.9,89,0.362,90,0.658,91,1.09,92,0.998,93,1.372,94,0.998,95,1.905,96,1.372,97,0.658,98,0.998,99,1.341,100,2.193,101,1.688,102,0.998,103,0.658,104,0.549,105,1.688,106,2.398,107,1.338,108,0.998,109,1.112,110,0.942,111,0.998,112,0.998,113,0.549,114,2.648,115,3.126,116,3.58,117,2.579,118,2.74,119,3.824,120,2.579,121,1.688,122,3.344,123,3.013,124,1.372,125,1.688,126,2.398,127,2.398,128,4.025,129,2.291,130,1.806,131,2.398,132,0.998,133,3.344,134,2.291,135,0.549,136,1.372,137,1.688,138,1.372,139,0.998,140,3.13,141,0.998,142,0.998,143,2.9,144,1.372,145,2.193,146,0.998,147,1.372,148,1.688,149,3.126,150,3.044,151,1.688,152,3.126,153,3.58,154,2.398,155,2.177,156,2.579,157,1.688,158,0.998,159,2.394,160,0.998,161,3.58,162,0.998,163,1.905,164,0.998,165,0.549,166,0.998,167,1.372,168,0.998,169,2.398,170,3.013,171,0.998,172,0.998,173,0.998,174,1.958,175,2.579,176,0.998,177,0.998,178,0.998,179,1.958,180,0.549,181,0.998,182,0.998,183,0.998,184,0.998,185,0.998,186,0.549,187,2.398,188,0.998,189,2.394,190,0.998,191,1.307,192,0.549,193,0.549,194,0.362,195,0.549,196,0.549,197,2.398,198,0.549,199,1.372,200,2.74,201,1.688,202,0.549,203,0.998,204,1.372,205,0.549,206,1.231,207,0.998,208,0.904,209,0.998,210,0.793,211,0.998,212,1.688,213,0.549,214,1.372,215,2.193,216,1.556,217,2.884,218,3.013,219,1.958,220,1.556,221,0.998,222,0.998,223,0.998,224,1.372,225,1.046,226,0.805,227,1.09,228,0.549,229,0.942,230,0.998,231,1.372,232,0.998,233,0.549,234,0.549,235,0.549,236,1.372,237,0.549,238,0.998,239,0.549,240,1.341,241,0.549,242,0.549,243,0.549,244,0.549,245,0.549,246,0.998,247,0.805,248,1.307,249,0.998,250,0.998,251,0.998,252,0.765,253,0.998,254,0.998,255,0.998,256,1.688,257,0.549,258,0.904,259,0.549,260,1.688,261,0.549,262,1.341,263,1.372,264,0.998,265,0.549,266,0.549,267,0.998,268,0.549,269,0.549,270,0.549,271,0.549,272,0.549,273,0.549,274,0.549,275,0.549,276,0.998,277,1.372,278,1.372,279,0.998,280,0.549,281,0.549,282,2.487,283,0.549,284,0.549,285,0.549,286,0.549,287,0.549,288,1.341,289,0.549,290,1.372,291,0.998,292,0.549,293,0.549,294,0.998,295,0.998,296,2.049,297,0.998,298,1.688,299,1.09,300,0.549,301,0.998,302,0.549,303,0.549,304,0.549,305,0.549,306,0.549,307,1.372,308,0.549,309,0.549,310,0.549,311,0.549,312,0.998,313,0.549,314,0.549,315,0.549,316,0.549,317,1.372,318,0.549,319,0.549,320,0.549,321,0.549,322,0.998,323,0.549,324,1.958,325,1.372,326,0.998,327,1.341,328,0.436,329,0.436,330,0.549,331,0.998,332,0.998,333,0.436,334,0.549,335,0.998,336,0.998,337,0.998,338,0.998,339,0.549,340,0.549,341,0.998,342,0.549,343,0.549,344,0.549,345,0.549,346,0.549,347,0.549,348,0.998,349,2.193,350,0.998,351,0.549,352,0.549,353,0.549,354,0.549,355,0.998,356,0.998,357,0.549,358,0.549,359,0.998,360,1.372,361,0.436,362,1.09,363,1.372,364,0.549,365,0.549,366,0.549,367,0.549,368,0.549,369,0.549,370,0.549,371,0.436,372,0.549,373,0.549,374,0.549,375,1.372,376,1.372,377,0.998,378,0.549,379,0.793,380,0.549,381,0.436,382,0.549]],["title/interfaces/DialogNodeOutput.html",[383,1.251,384,1.463]],["body/interfaces/DialogNodeOutput.html",[3,0.938,4,1.019,9,0.799,19,0.799,20,1.623,21,1.732,22,1.122,23,0.06,24,2.353,26,1.481,32,1.317,46,1.019,49,0.045,50,0.045,86,1.481,191,1.481,206,1.89,225,1.89,226,2.264,247,1.89,248,1.89,252,2.209,383,1.89,384,2.433,385,2.046,386,1.732,387,3.127,388,3.127,389,2.467]],["title/interfaces/Message.html",[46,0.674,383,1.251]],["body/interfaces/Message.html",[3,0.827,4,1.172,9,0.704,19,0.704,20,1.496,21,2.442,22,1.266,23,0.06,24,2.464,26,1.307,32,1.239,46,1.055,49,0.041,50,0.041,86,1.307,110,2.712,191,1.307,206,2.175,225,2.175,226,1.741,247,2.175,248,2.175,252,2.543,383,1.741,384,2.442,385,1.805,386,1.528,387,2.405,388,2.405,389,2.175,390,3.649]],["title/components/MessageComponent.html",[0,0.792,45,0.924]],["body/components/MessageComponent.html",[0,1.157,1,0.845,2,1.859,3,0.724,4,0.617,5,1.58,6,1.58,7,1.58,8,1.58,9,0.617,11,1.58,12,2.868,13,2.428,15,2.197,17,2.197,19,0.617,22,0.617,23,0.06,28,2.138,30,1.366,31,0.845,32,0.724,33,0.983,34,1.144,35,2.197,36,2.197,37,1.58,38,2.729,39,1.58,40,1.366,41,1.58,42,0.845,43,1.337,44,1.58,45,1.459,46,1.28,47,1.58,48,1.58,49,0.038,50,0.038,90,2.197,91,3.044,97,2.197,99,3.29,103,2.525,130,1.58,163,2.648,189,2.648,194,1.58,206,1.144,229,1.337,247,1.144,361,3.29,362,3.044,379,1.905,381,1.905,391,1.905,392,3.832,393,3.333,394,3.333,395,3.333,396,2.397,397,3.333,398,3.333,399,3.333,400,3.333,401,2.397,402,2.397,403,2.397,404,3.832,405,2.397,406,2.397,407,3.333,408,2.397,409,2.397,410,2.397]],["title/injectables/MessageService.html",[107,1.463,411,1.463]],["body/injectables/MessageService.html",[3,0.891,4,0.759,9,0.759,14,2.345,19,0.759,22,0.986,23,0.06,28,2.139,30,1.915,31,1.04,32,0.891,33,1.21,40,1.572,46,1.201,49,0.043,50,0.043,78,2.345,86,1.829,97,2.527,103,1.946,107,2.139,109,2.527,110,2.139,130,1.946,194,1.946,296,2.345,411,2.139,412,2.952,413,2.345,414,3.834,415,2.952,416,4.507,417,2.952,418,3.834,419,3.834,420,2.952,421,4.258,422,3.046,423,2.952,424,2.952,425,2.952,426,2.952,427,2.952,428,2.952,429,2.952,430,2.952,431,2.952,432,3.834,433,2.952,434,2.952]],["title/coverage.html",[435,2.816]],["body/coverage.html",[0,1.307,1,1.077,9,0.787,10,2.43,22,0.787,23,0.058,42,1.077,45,1.077,46,0.787,49,0.044,50,0.044,75,2.635,88,3.113,89,3.113,107,1.706,191,1.459,208,2.016,216,2.43,229,2.777,258,2.016,327,3.629,371,3.116,383,1.871,384,1.706,386,2.416,391,2.43,411,1.706,413,2.43,435,2.43,436,3.058,437,3.058,438,3.058,439,3.058,440,3.058,441,3.058,442,4.33,443,2.43,444,3.922,445,2.43,446,3.922,447,3.058,448,3.058,449,2.43,450,3.058,451,3.058]],["title/dependencies.html",[54,1.754,452,1.455]],["body/dependencies.html",[23,0.06,31,1.208,49,0.048,50,0.048,54,1.913,71,3.348,72,2.777,85,2.259,422,2.723,453,3.428,454,5.089,455,3.428,456,3.428,457,3.428,458,3.428,459,3.428,460,3.428,461,3.428,462,4.214,463,3.428,464,3.428,465,3.428,466,3.428,467,3.428,468,3.428,469,3.428,470,3.428]],["title/miscellaneous/functions.html",[471,1.231,472,2.498]],["body/miscellaneous/functions.html",[19,0.813,22,1.031,23,0.052,24,1.912,40,1.643,49,0.045,50,0.045,75,1.764,88,2.084,89,3.145,95,3.183,109,2.641,110,2.235,114,3.183,115,3.183,119,2.512,122,3.183,129,2.512,133,3.494,134,3.183,143,2.512,149,2.512,150,2.512,152,2.512,155,2.512,159,2.512,161,2.512,208,2.899,220,2.512,225,1.509,226,1.912,227,2.512,248,1.912,258,2.899,262,2.512,282,2.512,288,2.512,299,3.183,328,2.512,329,3.183,333,2.512,443,3.183,445,3.183,471,1.764,472,2.512,473,4.624]],["title/index.html",[19,0.568,474,2.207,475,2.207]],["body/index.html",[0,1.277,4,0.748,23,0.043,27,2.312,40,1.193,49,0.043,50,0.043,66,1.918,90,1.918,210,3.017,449,2.312,452,1.918,476,3.798,477,2.91,478,4.228,479,4.228,480,2.312,481,2.91,482,2.91,483,3.798,484,4.65,485,4.857,486,2.91,487,2.91,488,2.91,489,2.91,490,2.91,491,2.91,492,2.91,493,2.91,494,2.91,495,2.91,496,2.91,497,4.228,498,4.228,499,2.91,500,4.482,501,2.91,502,2.91,503,2.91,504,2.91,505,3.798,506,3.798,507,4.482,508,2.91,509,3.798,510,2.91,511,4.769,512,2.91,513,2.91,514,2.91,515,3.798,516,2.91,517,2.91,518,2.91,519,2.91,520,2.91,521,2.91,522,4.228,523,2.91,524,2.91,525,2.91,526,1.918,527,2.91,528,2.91]],["title/modules.html",[53,1.691]],["body/modules.html",[23,0.052,49,0.052,50,0.052,52,2.201,53,1.882,63,1.882,72,2.6,529,3.945,530,3.945,531,4.583,532,3.945,533,3.945]],["title/overview.html",[526,2.336]],["body/overview.html",[1,1.765,2,1.863,23,0.057,34,1.593,42,1.588,45,1.588,49,0.047,50,0.047,51,1.863,52,2.883,53,1.593,54,1.863,55,2.652,56,2.652,57,2.652,58,2.2,59,2.652,60,2.652,61,2.652,62,2.652,63,2.151,64,3.293,65,2.652,66,2.2,229,1.863,240,2.652,385,2.2,411,1.863,526,2.2,534,4.145,535,3.339]],["title/properties.html",[20,1.289,452,1.455]],["body/properties.html",[20,1.656,23,0.055,49,0.053,50,0.053,480,3.209,536,4.039]],["title/routes.html",[84,2.336]],["body/routes.html",[23,0.053,49,0.053,50,0.053,84,2.694]],["title/miscellaneous/variables.html",[471,1.231,537,2.498]],["body/miscellaneous/variables.html",[19,0.935,22,0.935,23,0.06,25,2.396,26,1.735,46,0.935,49,0.05,50,0.05,191,2.084,206,1.735,225,1.735,226,1.735,247,1.735,248,1.735,252,2.028,386,2.028,387,2.396,388,2.396,471,2.028,537,2.888,538,3.636]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":229,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":536,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["007bff",{"_index":409,"title":{},"body":{"components/MessageComponent.html":{}}}],["05s6p4q5lgj.ws",{"_index":430,"title":{},"body":{"injectables/MessageService.html":{}}}],["0px",{"_index":403,"title":{},"body":{"components/MessageComponent.html":{}}}],["1",{"_index":240,"title":{},"body":{"components/ChatBoxComponent.html":{},"overview.html":{}}}],["1.1em",{"_index":408,"title":{},"body":{"components/MessageComponent.html":{}}}],["1.2em",{"_index":410,"title":{},"body":{"components/MessageComponent.html":{}}}],["1.3.5",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":371,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{}}}],["10px",{"_index":362,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["15.2.0",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["15.2.6",{"_index":481,"title":{},"body":{"index.html":{}}}],["2",{"_index":534,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":535,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":381,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["4.7.3",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":401,"title":{},"body":{"components/MessageComponent.html":{}}}],["60px",{"_index":367,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["60vh",{"_index":369,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["7.8.0",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["absolute",{"_index":365,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["acceder",{"_index":243,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["activamos",{"_index":257,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["activatedroute",{"_index":105,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["actual_component",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["add",{"_index":518,"title":{},"body":{"index.html":{}}}],["ademas",{"_index":160,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["al",{"_index":255,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["angular",{"_index":478,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/MessageService.html":{}}}],["angular/compiler",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":85,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"dependencies.html":{}}}],["anterior",{"_index":235,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["app.component",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":490,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":52,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":63,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arr.some(m",{"_index":338,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["array",{"_index":219,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["array.isarray(result",{"_index":221,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["artifacts",{"_index":501,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":311,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["auto",{"_index":373,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["automatically",{"_index":491,"title":{},"body":{"index.html":{}}}],["available",{"_index":533,"title":{},"body":{"modules.html":{}}}],["axios",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":360,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["behaviorsubject",{"_index":423,"title":{},"body":{"injectables/MessageService.html":{}}}],["bold",{"_index":406,"title":{},"body":{"components/MessageComponent.html":{}}}],["bootstrap",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["botones",{"_index":177,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["bottom",{"_index":400,"title":{},"body":{"components/MessageComponent.html":{}}}],["botón",{"_index":123,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box",{"_index":92,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["box.component",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["box.component.css",{"_index":93,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.html",{"_index":94,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts",{"_index":89,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["box.component.ts:13",{"_index":192,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:14",{"_index":193,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:15",{"_index":108,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:172",{"_index":113,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:183",{"_index":180,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:32",{"_index":135,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:75",{"_index":186,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:86",{"_index":165,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box/chat",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":531,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":500,"title":{},"body":{"index.html":{}}}],["button",{"_index":349,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["button.removeattribute('disabled",{"_index":354,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["button.setattribute('disabled",{"_index":352,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["capabilities",{"_index":520,"title":{},"body":{"index.html":{}}}],["capacitor/android",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["capacitor/cli",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["caso",{"_index":307,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["change",{"_index":493,"title":{},"body":{"index.html":{}}}],["chat",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["chatbot",{"_index":355,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["chatboxcomponent",{"_index":42,"title":{"components/ChatBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":525,"title":{},"body":{"index.html":{}}}],["child(even",{"_index":378,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["child(odd",{"_index":377,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["choice",{"_index":514,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["cli",{"_index":479,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":495,"title":{},"body":{"index.html":{}}}],["color",{"_index":379,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["command",{"_index":515,"title":{},"body":{"index.html":{}}}],["como",{"_index":145,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["componente",{"_index":137,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"overview.html":{}}}],["comprobamos",{"_index":218,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["comprueba",{"_index":299,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["con",{"_index":197,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["condición",{"_index":234,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["conjunto",{"_index":176,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["consola",{"_index":184,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(\"resultado",{"_index":276,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(item.output.generic",{"_index":287,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(messages",{"_index":286,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(this.history",{"_index":323,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["const",{"_index":86,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["constructor(http",{"_index":415,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(private",{"_index":425,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(route",{"_index":104,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["container",{"_index":402,"title":{},"body":{"components/MessageComponent.html":{}}}],["contrario",{"_index":326,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["convertimos",{"_index":281,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["coverage",{"_index":435,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creamos",{"_index":201,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cual",{"_index":171,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cualquiera",{"_index":166,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cuando",{"_index":118,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cumple",{"_index":233,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["de",{"_index":161,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["debería",{"_index":304,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["debug",{"_index":182,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["declarations",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"miscellaneous/variables.html":{}}}],["default_message",{"_index":191,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":279,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["dejara",{"_index":309,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["del",{"_index":127,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["dependencies",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desactivamos",{"_index":207,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["dev",{"_index":487,"title":{},"body":{"index.html":{}}}],["development",{"_index":482,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":168,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["dialognodeoutput",{"_index":384,"title":{"interfaces/DialogNodeOutput.html":{}},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["directamente",{"_index":244,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["directives",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":499,"title":{},"body":{"index.html":{}}}],["directory",{"_index":504,"title":{},"body":{"index.html":{}}}],["disableuserinput",{"_index":208,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dist",{"_index":503,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('send",{"_index":350,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["document.getelementbyid('user",{"_index":348,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["documentation",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["dynamic",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":512,"title":{},"body":{"index.html":{}}}],["efefef",{"_index":382,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ejecuta",{"_index":117,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["el",{"_index":119,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["elegir",{"_index":178,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["elemento",{"_index":303,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["en",{"_index":149,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["enableuserinput",{"_index":258,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["end",{"_index":511,"title":{},"body":{"index.html":{}}}],["entities",{"_index":387,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["entonces",{"_index":347,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["envia",{"_index":151,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["enviamos",{"_index":209,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["enviar",{"_index":187,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["error",{"_index":332,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["es",{"_index":143,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["escrito",{"_index":147,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["esta",{"_index":138,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["este",{"_index":155,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["esto",{"_index":167,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["eu98.gitpod.io/send",{"_index":431,"title":{},"body":{"injectables/MessageService.html":{}}}],["execute",{"_index":509,"title":{},"body":{"index.html":{}}}],["existe",{"_index":134,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["existeoutputoption",{"_index":443,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["existeoutputoption(item.output.generic.length",{"_index":289,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["existeoutputoption(length",{"_index":328,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["existir",{"_index":310,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["exports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":325,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["falta",{"_index":302,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ffffff",{"_index":380,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["files",{"_index":494,"title":{},"body":{"index.html":{}}}],["first",{"_index":517,"title":{},"body":{"index.html":{}}}],["font",{"_index":404,"title":{},"body":{"components/MessageComponent.html":{}}}],["forma",{"_index":241,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["forzamos",{"_index":271,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["frontend",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["funcion",{"_index":181,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["función",{"_index":114,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":327,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{}}}],["functions",{"_index":472,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":521,"title":{},"body":{"index.html":{}}}],["generate",{"_index":497,"title":{},"body":{"index.html":{}}}],["generated",{"_index":477,"title":{},"body":{"index.html":{}}}],["generic",{"_index":226,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generic[1].response_type",{"_index":330,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["getbuttonvalue",{"_index":98,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["getbuttonvalue(option",{"_index":112,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["getting",{"_index":474,"title":{"index.html":{}},"body":{}}],["go",{"_index":524,"title":{},"body":{"index.html":{}}}],["graph",{"_index":532,"title":{},"body":{"modules.html":{}}}],["guardamos",{"_index":215,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["guarde",{"_index":158,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ha",{"_index":204,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["habido",{"_index":331,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hace",{"_index":142,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hacemos",{"_index":261,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["height",{"_index":368,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["help",{"_index":522,"title":{},"body":{"index.html":{}}}],["historial",{"_index":159,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["history",{"_index":95,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["history.some(arr",{"_index":337,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hola",{"_index":148,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["http",{"_index":418,"title":{},"body":{"injectables/MessageService.html":{}}}],["http://localhost:4200",{"_index":489,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":416,"title":{},"body":{"injectables/MessageService.html":{}}}],["httpclientmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["https://8080",{"_index":427,"title":{},"body":{"injectables/MessageService.html":{}}}],["https://placehold.it/300x300",{"_index":313,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hubiera",{"_index":146,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["identifier",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["iguales",{"_index":336,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["image",{"_index":298,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["imagen",{"_index":175,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["imagenes",{"_index":315,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["implements",{"_index":90,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["importar",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imprime",{"_index":183,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["inicia",{"_index":139,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["inicial",{"_index":202,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["inicializa",{"_index":136,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["initialmessage",{"_index":205,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["injectable",{"_index":411,"title":{"injectables/MessageService.html":{}},"body":{"injectables/MessageService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":412,"title":{},"body":{"injectables/MessageService.html":{}}}],["input",{"_index":189,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["input.removeattribute('disabled",{"_index":353,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["input.setattribute('disabled",{"_index":351,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["inputs",{"_index":394,"title":{},"body":{"components/MessageComponent.html":{}}}],["intents",{"_index":388,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":383,"title":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["interfaces",{"_index":385,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"overview.html":{}}}],["item.output",{"_index":230,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic",{"_index":231,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic.length",{"_index":232,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].options",{"_index":253,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].response_type",{"_index":249,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].source",{"_index":250,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].text",{"_index":246,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].title",{"_index":251,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].options",{"_index":293,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].response_type",{"_index":291,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].text",{"_index":318,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].title",{"_index":292,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["json",{"_index":277,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["json.stringify(result",{"_index":280,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["karma",{"_index":510,"title":{},"body":{"index.html":{}}}],["la",{"_index":128,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["label",{"_index":389,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}}}],["las",{"_index":314,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["le",{"_index":301,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"overview.html":{}}}],["length",{"_index":227,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":357,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["literal",{"_index":390,"title":{},"body":{"interfaces/Message.html":{}}}],["llegan",{"_index":264,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["lo",{"_index":140,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["m.response_type",{"_index":341,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["m.source",{"_index":343,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["m.title",{"_index":339,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["manda",{"_index":125,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["mandamos",{"_index":254,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["margin",{"_index":361,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["matching",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mayor",{"_index":228,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["mensaje",{"_index":152,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["mensajes",{"_index":212,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["message",{"_index":46,"title":{"interfaces/Message.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message.component.css",{"_index":392,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.component.html",{"_index":393,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.owner",{"_index":397,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.response_type",{"_index":297,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["message.source",{"_index":312,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["message.text",{"_index":398,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.title",{"_index":399,"title":{},"body":{"components/MessageComponent.html":{}}}],["message/message.component",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["message=${encodeuricomponent(message.text",{"_index":433,"title":{},"body":{"injectables/MessageService.html":{}}}],["messagecomponent",{"_index":45,"title":{"components/MessageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messages",{"_index":220,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["messages.foreach((item",{"_index":223,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[0].response_type",{"_index":345,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[0].source",{"_index":344,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[1].response_type",{"_index":342,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[1].title",{"_index":340,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messageservice",{"_index":107,"title":{"injectables/MessageService.html":{}},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["methods",{"_index":97,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["miscellaneous",{"_index":471,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/message",{"_index":194,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["module",{"_index":51,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":53,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":523,"title":{},"body":{"index.html":{}}}],["mostrarlo",{"_index":162,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":488,"title":{},"body":{"index.html":{}}}],["need",{"_index":516,"title":{},"body":{"index.html":{}}}],["new",{"_index":449,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":485,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":99,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["ni",{"_index":346,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["noexisteenhistorial",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["noexisteenhistorial([message",{"_index":294,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["noexisteenhistorial(messages",{"_index":333,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["none",{"_index":359,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["nos",{"_index":156,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["nuevo",{"_index":236,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["number",{"_index":329,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["o",{"_index":131,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["objeto",{"_index":196,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["objetos",{"_index":267,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["observable",{"_index":421,"title":{},"body":{"injectables/MessageService.html":{}}}],["oninit",{"_index":91,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["onsubmit",{"_index":100,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["onsubmit(res",{"_index":164,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option",{"_index":129,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["option.label",{"_index":356,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option.value",{"_index":320,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option.value.input",{"_index":321,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option.value.input.text",{"_index":322,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["optional",{"_index":110,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["optionmessage",{"_index":290,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["options",{"_index":252,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":308,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["otras",{"_index":266,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":225,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["overflow",{"_index":372,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["overview",{"_index":526,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":247,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":452,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":363,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["page",{"_index":528,"title":{},"body":{"index.html":{}}}],["para",{"_index":154,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["param",{"_index":200,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["parameters",{"_index":109,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["pasa",{"_index":319,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["pasar",{"_index":305,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["pero",{"_index":306,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["platform",{"_index":513,"title":{},"body":{"index.html":{}}}],["podemos",{"_index":242,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["poder",{"_index":283,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["por",{"_index":278,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["posición",{"_index":245,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["position",{"_index":364,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["predeterminado",{"_index":198,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["primero",{"_index":300,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["printhistory",{"_index":101,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["private",{"_index":199,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["project",{"_index":476,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"properties.html":{}}}],["providedin",{"_index":424,"title":{},"body":{"injectables/MessageService.html":{}}}],["providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["psl2001",{"_index":428,"title":{},"body":{"injectables/MessageService.html":{}}}],["puede",{"_index":172,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["pulsa",{"_index":121,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["que",{"_index":115,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["query",{"_index":260,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["query1",{"_index":190,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["querystring",{"_index":432,"title":{},"body":{"injectables/MessageService.html":{}}}],["recibe",{"_index":239,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["recibimos",{"_index":214,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["recorremos",{"_index":222,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["reference",{"_index":527,"title":{},"body":{"index.html":{}}}],["reload",{"_index":492,"title":{},"body":{"index.html":{}}}],["res",{"_index":179,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["res.options?.values",{"_index":269,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["res.text",{"_index":270,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responda",{"_index":157,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["response",{"_index":96,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["response_type",{"_index":248,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["respuesta",{"_index":170,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["result",{"_index":217,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["results",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":296,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["returns",{"_index":130,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["right",{"_index":374,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/MessageService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["route",{"_index":111,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["router",{"_index":106,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["routermodule",{"_index":83,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":87,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":84,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":82,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":375,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["run",{"_index":484,"title":{},"body":{"index.html":{}}}],["running",{"_index":505,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":422,"title":{},"body":{"injectables/MessageService.html":{},"dependencies.html":{}}}],["sabemos",{"_index":237,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["scaffolding",{"_index":496,"title":{},"body":{"index.html":{}}}],["se",{"_index":116,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["sea",{"_index":272,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["sean",{"_index":335,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["segundo",{"_index":288,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["sendmessage",{"_index":414,"title":{},"body":{"injectables/MessageService.html":{}}}],["sendmessage(message",{"_index":419,"title":{},"body":{"injectables/MessageService.html":{}}}],["ser",{"_index":173,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["serve",{"_index":486,"title":{},"body":{"index.html":{}}}],["server",{"_index":483,"title":{},"body":{"index.html":{}}}],["services/message.service",{"_index":195,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["servicio",{"_index":211,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["si",{"_index":133,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["siempre",{"_index":238,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["simplemente",{"_index":124,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["simular",{"_index":144,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["size",{"_index":407,"title":{},"body":{"components/MessageComponent.html":{}}}],["solo",{"_index":203,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"index.html":{}}}],["src/.../chat",{"_index":473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../message.ts",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":81,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/chat",{"_index":88,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/message/message.component.ts",{"_index":391,"title":{},"body":{"components/MessageComponent.html":{},"coverage.html":{}}}],["src/app/message/message.component.ts:10",{"_index":395,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/message/message.component.ts:14",{"_index":396,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/models/message.ts",{"_index":386,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/message.service.ts",{"_index":413,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/services/message.service.ts:10",{"_index":417,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:14",{"_index":420,"title":{},"body":{"injectables/MessageService.html":{}}}],["started",{"_index":475,"title":{"index.html":{}},"body":{}}],["statements",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":502,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{}}}],["strings",{"_index":265,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["striped:nth",{"_index":376,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["style",{"_index":358,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["submitmessage",{"_index":102,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["submitmessage(query1",{"_index":185,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["support",{"_index":529,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":530,"title":{},"body":{"modules.html":{}}}],["table",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["test",{"_index":508,"title":{},"body":{"index.html":{}}}],["testing",{"_index":519,"title":{},"body":{"index.html":{}}}],["tests",{"_index":507,"title":{},"body":{"index.html":{}}}],["text",{"_index":206,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"miscellaneous/variables.html":{}}}],["textmessage",{"_index":317,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["texto",{"_index":174,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.history",{"_index":295,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.history.push([message",{"_index":256,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.history.push([this.message",{"_index":274,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.http.get(url",{"_index":434,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.message",{"_index":273,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.messageservice.sendmessage(initialmessage).subscribe((result",{"_index":213,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.messageservice.sendmessage(this.message).subscribe((result",{"_index":275,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.onsubmit(query1",{"_index":259,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tiene",{"_index":224,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tipo",{"_index":282,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}}}],["titulo",{"_index":334,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["toma",{"_index":188,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["top",{"_index":366,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["trabajar",{"_index":284,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["true",{"_index":324,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tslib",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":268,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["un",{"_index":122,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":169,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["unico",{"_index":141,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["unit",{"_index":506,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":285,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["url",{"_index":426,"title":{},"body":{"injectables/MessageService.html":{}}}],["use",{"_index":498,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":120,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["vacío",{"_index":132,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["valor",{"_index":126,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["variable",{"_index":216,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{}}}],["variables",{"_index":537,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veces",{"_index":263,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["version",{"_index":480,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":210,"title":{},"body":{"components/ChatBoxComponent.html":{},"index.html":{}}}],["vienen",{"_index":316,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["void",{"_index":163,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["watson",{"_index":153,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["watsonassistant",{"_index":429,"title":{},"body":{"injectables/MessageService.html":{}}}],["weight",{"_index":405,"title":{},"body":{"components/MessageComponent.html":{}}}],["width",{"_index":370,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["y",{"_index":150,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["ya",{"_index":262,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'frontend'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'MessageComponent', 'selector': 'app-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatBoxComponent\n\nChatBoxComponent\n\nAppModule -->\n\nChatBoxComponent->AppModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nAppModule -->\n\nMessageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChatBoxComponent\n                        \n                        \n                            MessageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n// Importar MessageComponent\nimport { MessageComponent } from './message/message.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatBoxComponent,\n    MessageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatBoxComponent.html":{"url":"components/ChatBoxComponent.html","title":"component - ChatBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chat-box/chat-box.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-box\n            \n\n\n\n            \n                styleUrls\n                ./chat-box.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chat-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                history\n                            \n                            \n                                message\n                            \n                            \n                                response\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                printHistory\n                            \n                            \n                                submitMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/chat-box/chat-box.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getButtonValue\n                        \n                    \n                \n            \n            \n                \ngetButtonValue(option: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:172\n                \n            \n\n\n            \n                \n                    Función que se ejecuta cuando el usuario pulsa un botón\nSimplemente manda el valor del botón a la función onSubmit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        el valor del botón o un string vacío si no existe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:32\n                \n            \n\n\n            \n                \n                    Inicializa el componente\nEsta función se ejecuta cuando se inicia el componente\nLo unico que hace es simular como si el usuario hubiera escrito \"Hola\" en el chat\ny envia el mensaje a Watson, para que este nos responda y se guarde en el historial\nademas de mostrarlo en el chat\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(res: Message | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:86\n                \n            \n\n\n            \n                \n                    Función que se ejecuta cuando el usuario manda un mensaje cualquiera a Watson\nEsto nos devuelve una respuesta de watson, la cual puede ser un texto, una imagen o un conjunto de botones para elegir\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Message | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        printHistory\n                        \n                    \n                \n            \n            \n                \nprintHistory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:183\n                \n            \n\n\n            \n                \n                    Funcion de debug, imprime el historial en la consola\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitMessage\n                        \n                    \n                \n            \n            \n                \nsubmitMessage(query1: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:75\n                \n            \n\n\n            \n                \n                    Función que se ejecuta cuando se pulsa el botón de enviar\nToma el valor del input y lo envia a la función onSubmit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/chat-box/chat-box.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : { ...DEFAULT_MESSAGE }\n                    \n                \n                    \n                        \n                                Defined in src/app/chat-box/chat-box.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/chat-box/chat-box.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Message, DEFAULT_MESSAGE } from '../models/message';\nimport { MessageService } from '../services/message.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css']\n})\nexport class ChatBoxComponent implements OnInit {\n\n  message: Message = { ...DEFAULT_MESSAGE }; // Inicializa el objeto de mensaje con el valor predeterminado\n  response: Message[] = [];\n  history: Message[][] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private messageService: MessageService\n  ) { }\n\n  /**\n   * Inicializa el componente\n   * Esta función se ejecuta cuando se inicia el componente\n   * Lo unico que hace es simular como si el usuario hubiera escrito \"Hola\" en el chat\n   * y envia el mensaje a Watson, para que este nos responda y se guarde en el historial\n   * ademas de mostrarlo en el chat\n   * @param void\n   * @returns void\n   */\n  ngOnInit() {\n    // Creamos un mensaje inicial para que Watson nos responda\n    // Este mensaje es solo para simular que el usuario ha escrito \"Hola\" en el chat y que Watson nos responda\n    const initialMessage: Message = {\n      ...DEFAULT_MESSAGE,\n      text: 'Hola'\n    };\n    // Desactivamos el botón de enviar y el input\n    disableUserInput();\n    // Enviamos el mensaje a Watson, via el servicio de mensajes\n    this.messageService.sendMessage(initialMessage).subscribe((result: Message[]) => {\n      // Recibimos la respuesta de Watson y la guardamos en la variable result\n      // Comprobamos si result es un array, si lo es, lo guardamos en la variable messages\n      const messages = Array.isArray(result) ? result : [result];\n      // Recorremos el array de mensajes\n      messages.forEach((item: Message) => {\n        // Comprobamos si el mensaje tiene un output y si este output tiene un generic y si este generic tiene un length mayor que 0\n        if (item.output && item.output.generic && item.output.generic.length > 0) {\n          // Si se cumple la condición anterior, creamos un nuevo mensaje con el texto de la respuesta de Watson\n          // Como sabemos que siempre se recibe 1 mensaje de watson de esta forma, podemos acceder directamente a la posición 0 del array\n          const message: Message = {\n            ...DEFAULT_MESSAGE,\n            text: item.output.generic[0].text,\n            owner: 'Watson: ',\n            response_type: item.output.generic[0].response_type,\n            source: item.output.generic[0].source || '',\n            title: item.output.generic[0].title || '',\n            options: item.output.generic[0].options || []\n          };\n          //Mandamos el mensaje al historial\n          this.history.push([message]);\n          //Activamos el botón de enviar y el input\n          enableUserInput();\n        }\n      });\n    });\n  }\n\n  /**\n   * Función que se ejecuta cuando se pulsa el botón de enviar\n   * Toma el valor del input y lo envia a la función onSubmit\n   * @param query1\n   */\n  submitMessage(query1: string) {\n    // Desactivamos el botón de enviar y el input\n    disableUserInput();\n    this.onSubmit(query1);\n  }\n\n  /**\n   * Función que se ejecuta cuando el usuario manda un mensaje cualquiera a Watson\n   * Esto nos devuelve una respuesta de watson, la cual puede ser un texto, una imagen o un conjunto de botones para elegir\n   * @param res\n   */\n  onSubmit(res: Message | string) {\n    // Comprobamos si res es un string, si lo es, lo guardamos en la variable query, hacemos esto ya a veces nos llegan strings y otras veces objetos\n    const query = typeof res === 'string' ? res : res.options?.values || res.text || '';\n    // Como a veces nos llegan objetos, simplemente forzamos a que query sea un string\n    this.message = {\n      ...DEFAULT_MESSAGE,\n      response_type: 'text',\n      text: query as string,\n      owner: 'Usuario: '\n    };\n\n    // Mandamos el mensaje al historial\n    this.history.push([this.message]);\n\n    // Enviamos el mensaje a Watson, via el servicio de mensajes\n    this.messageService.sendMessage(this.message).subscribe((result: Message[]) => {\n      // Recibimos la respuesta de Watson y la guardamos en la variable result\n      console.log(\"Resultado de la respuesta como JSON (respuesta por defecto): \" + JSON.stringify(result));\n      // Con result, lo convertimos en tipo Message para poder trabajar con el\n      const message = result as unknown as Message;\n      console.log(\"Resultado de la respuesta como Message: \" + message);\n\n      // Comprobamos si result es un array, si lo es, lo guardamos en la variable messages\n      const messages = Array.isArray(result) ? result : [result];\n      console.log(messages);\n      // Recorremos el array de mensajes\n      messages.forEach((item: Message) => {\n        if (item.output && item.output.generic && item.output.generic.length > 0) {\n          console.log(item.output.generic)\n          const message: Message = {\n            ...DEFAULT_MESSAGE,\n            text: item.output.generic[0].text,\n            owner: 'Watson: ',\n            response_type: item.output.generic[0].response_type,\n            source: item.output.generic[0].source || '',\n            title: item.output.generic[0].title || '',\n            options: item.output.generic[0].options || []\n          };\n          //Comprobamos si existe un segundo output y si este es de tipo option\n          if (existeOutputOption(item.output.generic.length, item.output.generic)) {\n            //Si existe, creamos un nuevo mensaje con el segundo output\n            const optionMessage: Message = {\n              ...DEFAULT_MESSAGE,\n              response_type: item.output.generic[1].response_type,\n              title: item.output.generic[1].title,\n              options: item.output.generic[1].options,\n            }\n            //Comprobamos si el mensaje ya existe en el historial\n            if (noExisteEnHistorial([message, optionMessage], this.history, item.output.generic[1].response_type)) {\n              this.history.push([message, optionMessage]);\n              return;\n            }\n          }\n          //Comprobamos si el mensaje es una imagen\n          if (message.response_type === 'image') {\n            //Comprueba primero si la imagen le falta un elemento source. No debería de pasar, pero en caso de que la imagen original dejara de existir, se le asigna una imagen por defecto\n            if (message.source === '') {\n              message.source = 'https://placehold.it/300x300';\n            }\n            //Las imagenes siempre vienen con un mensaje de texto, por lo que creamos un nuevo mensaje con el texto de la imagen\n            const textMessage: Message = {\n              ...DEFAULT_MESSAGE,\n              text: item.output.generic[1].text,\n              owner: 'Watson: ',\n              response_type: 'text'\n            };\n            //Comprobamos si el mensaje ya existe en el historial\n            if (noExisteEnHistorial([message, textMessage], this.history, message.response_type)) {\n              this.history.push([message, textMessage]);\n            }\n          } else {\n            //Guardamos el mensaje en el historial, este else solo pasa cuando no es una imagen o un option\n            this.history.push([message]);\n          }\n          enableUserInput();\n        }\n      });\n    });\n  }\n\n  /**\n   * Función que se ejecuta cuando el usuario pulsa un botón\n   * Simplemente manda el valor del botón a la función onSubmit\n   * @param option\n   * @returns el valor del botón o un string vacío si no existe\n   */\n  getButtonValue(option: any): string {\n    if (option.value && option.value.input && option.value.input.text) {\n      return option.value.input.text;\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Funcion de debug, imprime el historial en la consola\n   */\n  printHistory() {\n    console.log(this.history);\n  }\n\n}\n/**\n * Función que comprueba si existe un segundo output y si este es de tipo option\n *\n * @param length\n * @param generic\n * @returns  true si existe un segundo output y este es de tipo option, false en caso contrario\n */\nfunction existeOutputOption(length: number, generic: any) {\n  if (length > 1) {\n    if (generic[1].response_type === 'option') {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Función que comprueba si un mensaje ya existe en el historial\n * @param messages\n * @param history\n * @param response_type\n * @returns true si el mensaje no existe en el historial, false en caso contrario o -1 si ha habido un error\n */\nfunction noExisteEnHistorial(messages: Message[], history: Message[][], response_type: string) {\n  //Comprobamos el tipo de respuesta que recibimos\n  if (response_type === 'option') {\n    //Si es de tipo option, comprobamos que el titulo y el tipo de respuesta sean iguales\n    return !history.some(arr => arr.some(m => m.title === messages[1].title && m.response_type === messages[1].response_type));\n  }\n  if (response_type === 'image') {\n    //Si es de tipo image, comprobamos que el source y el tipo de respuesta sean iguales\n    return !history.some(arr => arr.some(m => m.source === messages[0].source && m.response_type === messages[0].response_type));\n  }\n  //Si no es de tipo option ni de tipo image, entonces es de tipo text o ha habido un error\n  return -1;\n}\n\nfunction disableUserInput() {\n  const input = document.getElementById('user-input');\n  const button = document.getElementById('send-button');\n  if (input && button) {\n    input.setAttribute('disabled', 'true');\n    button.setAttribute('disabled', 'true');\n  }\n}\n\nfunction enableUserInput() {\n  const input = document.getElementById('user-input');\n  const button = document.getElementById('send-button');\n  if (input && button) {\n    input.removeAttribute('disabled');\n    button.removeAttribute('disabled');\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n      ChatBot\n      \n\n      \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                \n                \n                  {{ option.label }}\n                \n              \n            \n          \n          \n        \n      \n\n      {{ history | json }} -->\n\n      \n        \n        Enviar\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./chat-box.component.css\n                \n                .chat {\n  list-style: none;\n  background: none;\n  margin: 10px;\n  padding: 10px;\n  position: absolute;\n  top: 60px;\n  height: 60vh;\n  width: 100%;\n  overflow-y: auto;\n  padding-right: 10px;\n}\n\n.row-striped:nth-child(odd),\n.row-striped:nth-child(even) {\n  background-color: #ffffff;\n  padding: 3px;\n}\n\n.row-striped:nth-child(odd) {\n  background-color: #efefef;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ChatBot                                                                                                                                                                                                  {{ option.label }}                                                                                  {{ history | json }} -->                      Enviar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'MessageComponent', 'selector': 'app-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogNodeOutput.html":{"url":"interfaces/DialogNodeOutput.html","title":"interface - DialogNodeOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogNodeOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            generic\n                                        \n                                \n                                \n                                        \n                                            intents\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generic:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intents:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  response_type: string;\n  source?: string;\n  text: string;\n  owner: string;\n  title?: string;\n  options?: { label: string, value: string }[];\n  output?: DialogNodeOutput;\n}\n\nexport interface DialogNodeOutput {\n  entities: any[];\n  generic: any[];\n  intents: any[];\n}\n\nexport const DEFAULT_MESSAGE: Message = {\n  response_type: '',\n  text: '',\n  owner: '',\n  options: [],\n  output: { entities: [], generic: [], intents: [] }\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            response_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         DialogNodeOutput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DialogNodeOutput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  response_type: string;\n  source?: string;\n  text: string;\n  owner: string;\n  title?: string;\n  options?: { label: string, value: string }[];\n  output?: DialogNodeOutput;\n}\n\nexport interface DialogNodeOutput {\n  entities: any[];\n  generic: any[];\n  intents: any[];\n}\n\nexport const DEFAULT_MESSAGE: Message = {\n  response_type: '',\n  text: '',\n  owner: '',\n  options: [],\n  output: { entities: [], generic: [], intents: [] }\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageComponent.html":{"url":"components/MessageComponent.html","title":"component - MessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/message/message.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message\n            \n\n\n\n            \n                styleUrls\n                ./message.component.css\n            \n\n\n\n            \n                templateUrl\n                ./message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/message/message.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         Message\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/message/message.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/message/message.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Message } from '../models/message';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n  @Input() message!: Message;\n  \n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n\n    \n\n    \n        \n    {{ message.owner }}\n    \n    {{ message.text }}\n    {{ message.title }}\n  \n  \n    \n\n    \n                \n                    ./message.component.css\n                \n                .message {\n    margin-bottom: 5px;\n  }\n  \n  .message-container {\n    margin: 10px 10px 10px 0px;\n  }\n  \n  .message-owner {\n    font-weight: bold;\n    font-size: 1.1em;\n    color: #007bff;\n    margin-bottom: 3px;\n  }\n  \n  .message-text {\n    margin: 0;\n    font-size: 1.2em;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ message.owner }}        {{ message.text }}    {{ message.title }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'MessageComponent', 'selector': 'app-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Message } from '../models/message';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(private http: HttpClient) { }\n\n  sendMessage(message: Message): Observable {\n    const url = `https://8080-psl2001-watsonassistant-05s6p4q5lgj.ws-eu98.gitpod.io/send/`;\n    const queryString = `?message=${encodeURIComponent(message.text)}`;\n    return this.http.get(url + queryString);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            component\n            ChatBoxComponent\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            disableUserInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            enableUserInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            existeOutputOption\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            noExisteEnHistorial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/message/message.component.ts\n            \n            component\n            MessageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            interface\n            DialogNodeOutput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            variable\n            DEFAULT_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @capacitor/android : ^4.7.3\n        \n            @capacitor/cli : ^4.8.0\n        \n            @capacitor/core : ^4.8.0\n        \n            axios : ^1.3.5\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            disableUserInput   (src/.../chat-box.component.ts)\n                        \n                        \n                            enableUserInput   (src/.../chat-box.component.ts)\n                        \n                        \n                            existeOutputOption   (src/.../chat-box.component.ts)\n                        \n                        \n                            noExisteEnHistorial   (src/.../chat-box.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/chat-box/chat-box.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        disableUserInput\n                        \n                    \n                \n            \n            \n                \ndisableUserInput()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableUserInput\n                        \n                    \n                \n            \n            \n                \nenableUserInput()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existeOutputOption\n                        \n                    \n                \n            \n            \n                \nexisteOutputOption(length: number, generic: any)\n                \n            \n\n\n\n\n            \n                \n                    Función que comprueba si existe un segundo output y si este es de tipo option\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    generic\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noExisteEnHistorial\n                        \n                    \n                \n            \n            \n                \nnoExisteEnHistorial(messages, history, response_type: string)\n                \n            \n\n\n\n\n            \n                \n                    Función que comprueba si un mensaje ya existe en el historial\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    history\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response_type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 15.2.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatBoxComponent\n\nChatBoxComponent\n\nAppModule -->\n\nChatBoxComponent->AppModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nAppModule -->\n\nMessageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_MESSAGE   (src/.../message.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/message.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : {\n  response_type: '',\n  text: '',\n  owner: '',\n  options: [],\n  output: { entities: [], generic: [], intents: [] }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
