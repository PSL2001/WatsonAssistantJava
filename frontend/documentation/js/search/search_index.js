var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.792,1,0.924]],["body/components/AppComponent.html",[0,1.287,1,1.589,2,2.142,3,0.894,4,0.761,5,1.95,6,1.95,7,1.95,8,1.95,9,0.761,10,2.351,11,1.95,12,3.081,13,2.608,14,3.051,15,2.531,16,4.263,17,2.531,18,3.84,19,0.761,20,1.574,21,2.378,22,0.761,23,0.059,24,1.412,25,1.95,26,1.412,27,3.051,28,1.651,29,2.959,30,1.213,31,1.043,32,0.894,33,1.213,34,1.412,35,2.531,36,2.531,37,1.95,38,2.973,39,1.95,40,1.574,41,1.95,42,1.043,43,1.651,44,1.95,45,1.043,46,0.761,47,1.95,48,1.95,49,0.044,50,0.044]],["title/modules/AppModule.html",[51,1.463,52,1.463]],["body/modules/AppModule.html",[1,1.773,3,0.81,4,0.69,9,0.69,13,1.497,23,0.06,30,1.952,31,0.945,32,0.81,33,1.1,34,1.28,42,1.642,43,1.497,45,1.678,49,0.041,50,0.041,51,1.497,52,2.825,53,1.28,54,1.497,55,3.227,56,3.227,57,2.86,58,1.769,59,2.132,60,2.132,61,2.132,62,2.132,63,2.224,64,2.86,65,2.132,66,1.769,67,2.684,68,2.86,69,2.86,70,3.6,71,2.132,72,1.769,73,2.684,74,2.684,75,1.497,76,2.684,77,3.6,78,2.132,79,2.684,80,2.684]],["title/modules/AppRoutingModule.html",[51,1.463,63,1.251]],["body/modules/AppRoutingModule.html",[3,1.084,4,0.923,9,0.923,23,0.059,30,1.776,31,1.264,32,1.084,33,1.471,49,0.049,50,0.049,53,1.712,58,2.365,63,2.067,68,2.851,69,3.442,81,3.589,82,3.589,83,4.333,84,3.068,85,2.365,86,1.712,87,3.589]],["title/components/ChatBoxComponent.html",[0,0.792,42,0.924]],["body/components/ChatBoxComponent.html",[0,0.424,1,0.199,2,0.571,3,0.17,4,0.514,5,0.372,6,0.372,7,0.372,8,0.372,9,0.145,11,0.372,12,1.316,13,1.114,15,0.674,17,0.674,19,0.145,20,0.419,21,0.783,22,0.627,23,0.06,24,1.652,25,0.925,26,0.67,28,1.552,30,0.706,31,0.199,32,0.17,33,0.231,34,0.269,35,0.674,36,0.674,37,0.372,38,1.136,39,0.372,40,0.915,41,0.372,42,0.607,43,1.882,44,0.372,45,0.199,46,1.064,47,0.372,48,0.372,49,0.012,50,0.012,75,1.632,85,0.372,86,1.25,88,1.928,89,0.372,90,0.674,91,1.115,92,1.023,93,1.403,94,1.023,95,1.938,96,1.403,97,0.674,98,1.023,99,1.369,100,2.233,101,1.724,102,1.023,103,0.674,104,0.564,105,1.724,106,2.439,107,1.361,108,1.023,109,1.136,110,0.962,111,1.023,112,1.023,113,0.564,114,2.68,115,3.152,116,3.618,117,2.621,118,2.782,119,3.786,120,2.621,121,1.724,122,3.368,123,2.621,124,1.403,125,1.724,126,2.439,127,2.439,128,3.968,129,2.324,130,1.833,131,2.439,132,1.023,133,3.368,134,2.324,135,0.564,136,1.403,137,1.724,138,1.403,139,1.023,140,3.055,141,1.023,142,1.023,143,2.929,144,1.403,145,1.724,146,1.023,147,1.403,148,1.724,149,3.114,150,2.929,151,1.724,152,3.152,153,2.874,154,2.233,155,2.21,156,2.621,157,1.724,158,1.023,159,2.427,160,1.023,161,3.517,162,1.023,163,1.938,164,1.023,165,0.564,166,1.023,167,1.403,168,1.023,169,2.439,170,2.621,171,1.023,172,1.023,173,1.023,174,1.997,175,2.621,176,1.023,177,1.023,178,1.023,179,1.997,180,0.564,181,1.023,182,1.023,183,1.023,184,1.023,185,1.023,186,0.564,187,1.724,188,1.023,189,0.813,190,1.023,191,1.327,192,0.564,193,0.564,194,0.372,195,0.564,196,0.564,197,1.997,198,0.564,199,1.403,200,2.782,201,1.724,202,0.564,203,1.023,204,1.403,205,0.564,206,1.25,207,1.023,208,0.813,209,1.023,210,1.724,211,0.564,212,1.403,213,2.233,214,1.587,215,2.621,216,3.055,217,1.997,218,1.587,219,1.023,220,1.023,221,1.023,222,1.403,223,1.066,224,0.822,225,1.115,226,0.564,227,0.962,228,1.023,229,1.403,230,1.023,231,0.564,232,0.564,233,0.564,234,1.403,235,0.564,236,1.023,237,0.564,238,1.369,239,0.564,240,0.564,241,0.564,242,0.564,243,0.564,244,1.023,245,0.822,246,1.327,247,1.023,248,1.023,249,1.023,250,0.783,251,1.023,252,1.023,253,1.023,254,1.724,255,0.564,256,1.724,257,0.564,258,1.369,259,1.403,260,1.023,261,0.564,262,0.564,263,1.023,264,0.564,265,0.564,266,0.564,267,0.564,268,0.564,269,0.564,270,0.564,271,0.564,272,0.564,273,0.564,274,1.369,275,2.427,276,0.564,277,1.403,278,1.023,279,0.564,280,0.564,281,1.023,282,1.023,283,2.082,284,1.023,285,1.724,286,1.115,287,0.564,288,1.023,289,0.564,290,0.564,291,0.564,292,0.564,293,0.564,294,1.403,295,0.564,296,0.564,297,0.564,298,0.564,299,1.023,300,0.564,301,1.023,302,0.564,303,0.564,304,0.564,305,0.564,306,1.403,307,0.564,308,0.564,309,0.564,310,0.564,311,1.023,312,0.564,313,1.403,314,1.115,315,1.023,316,0.813,317,0.448,318,0.448,319,0.564,320,1.023,321,1.023,322,0.448,323,0.564,324,1.023,325,1.023,326,1.023,327,1.023,328,0.564,329,0.564,330,1.023,331,0.564,332,0.564,333,0.564,334,0.564,335,0.564,336,0.564,337,1.023,338,1.023,339,1.023,340,0.564,341,0.564,342,1.023,343,1.403,344,0.448,345,1.115,346,1.403,347,0.564,348,0.564,349,0.564,350,0.564,351,0.564,352,0.564,353,0.564,354,0.448,355,0.564,356,0.564,357,0.564,358,1.403,359,1.403,360,1.023,361,0.564,362,0.813,363,0.564,364,0.448,365,0.564]],["title/interfaces/DialogNodeOutput.html",[366,1.251,367,1.463]],["body/interfaces/DialogNodeOutput.html",[3,0.927,4,1.011,9,0.79,19,0.79,20,1.612,21,1.713,22,1.116,23,0.06,24,2.347,26,1.465,32,1.31,46,1.011,49,0.045,50,0.045,86,1.465,191,1.465,206,1.876,223,1.876,224,2.256,245,1.876,246,1.876,250,2.194,366,1.876,367,2.42,368,2.024,369,1.713,370,3.116,371,3.116,372,2.44]],["title/interfaces/Message.html",[46,0.674,366,1.251]],["body/interfaces/Message.html",[3,0.815,4,1.167,9,0.694,19,0.694,20,1.481,21,2.427,22,1.262,23,0.06,24,2.46,26,1.288,32,1.23,46,1.048,49,0.041,50,0.041,86,1.288,110,2.703,191,1.288,206,2.164,223,2.164,224,1.724,245,2.164,246,2.164,250,2.531,366,1.724,367,2.427,368,1.778,369,1.505,370,2.381,371,2.381,372,2.144,373,3.613]],["title/components/MessageComponent.html",[0,0.792,45,0.924]],["body/components/MessageComponent.html",[0,1.146,1,0.83,2,1.836,3,0.711,4,0.606,5,1.552,6,1.552,7,1.552,8,1.552,9,0.606,11,1.552,12,2.849,13,2.412,15,2.169,17,2.169,19,0.606,22,0.606,23,0.06,28,2.117,30,1.349,31,0.83,32,0.711,33,0.965,34,1.123,35,2.169,36,2.169,37,1.552,38,2.708,39,1.552,40,1.349,41,1.552,42,0.83,43,1.314,44,1.552,45,1.448,46,1.276,47,1.552,48,1.552,49,0.037,50,0.037,90,2.169,91,3.015,97,2.169,99,3.264,103,2.501,130,1.552,163,2.615,189,2.615,194,1.552,206,1.123,227,1.314,245,1.123,344,3.264,345,3.015,362,1.87,364,1.87,374,1.87,375,3.795,376,3.291,377,3.291,378,3.291,379,2.354,380,3.291,381,3.291,382,3.291,383,3.291,384,2.354,385,2.354,386,2.354,387,3.795,388,2.354,389,2.354,390,3.291,391,2.354,392,2.354,393,2.354]],["title/injectables/MessageService.html",[107,1.463,394,1.463]],["body/injectables/MessageService.html",[3,0.891,4,0.759,9,0.759,14,2.344,19,0.759,22,0.986,23,0.06,28,2.138,30,1.914,31,1.04,32,0.891,33,1.209,40,1.571,46,1.201,49,0.043,50,0.043,78,2.344,86,1.829,97,2.526,103,1.944,107,2.138,109,2.526,110,2.138,130,1.944,194,1.944,283,2.344,394,2.138,395,2.951,396,2.344,397,3.833,398,2.951,399,4.506,400,2.951,401,3.833,402,3.833,403,2.951,404,4.257,405,3.045,406,2.951,407,2.951,408,2.951,409,2.951,410,2.951,411,3.833,412,2.951,413,2.951]],["title/coverage.html",[414,2.816]],["body/coverage.html",[0,1.32,1,1.099,9,0.802,10,2.478,22,0.802,23,0.058,42,1.099,45,1.099,46,0.802,49,0.045,50,0.045,75,2.438,88,2.88,89,2.88,107,1.74,191,1.489,214,3.156,227,2.754,316,3.156,354,3.156,366,1.895,367,1.74,369,2.438,374,2.478,394,1.74,396,2.478,414,2.478,415,3.12,416,3.12,417,3.12,418,2.478,419,2.478,420,3.973,421,3.12,422,3.12,423,3.12,424,2.478,425,3.973,426,2.478,427,3.973,428,3.12,429,3.12,430,2.478,431,3.12,432,3.12]],["title/dependencies.html",[54,1.754,433,1.455]],["body/dependencies.html",[23,0.06,31,1.198,49,0.048,50,0.048,54,1.898,71,3.332,72,2.764,85,2.242,405,2.702,434,3.402,435,5.081,436,3.402,437,3.402,438,3.402,439,3.402,440,3.402,441,4.547,442,3.402,443,3.402,444,3.402,445,3.402,446,3.402,447,3.402,448,3.402,449,3.402,450,3.402]],["title/miscellaneous/functions.html",[451,1.231,452,2.498]],["body/miscellaneous/functions.html",[19,0.832,22,1.045,23,0.053,24,1.939,40,1.666,49,0.046,50,0.046,75,1.804,88,2.131,89,2.928,95,3.228,109,2.678,110,2.267,114,3.228,115,3.228,119,2.568,122,3.228,129,2.568,133,3.53,134,3.228,143,2.568,149,2.568,150,2.568,152,2.568,155,2.568,159,2.568,161,2.568,218,2.568,223,1.543,224,1.939,225,2.568,246,1.939,258,2.568,274,2.568,275,2.568,286,3.228,317,2.568,318,3.228,322,2.568,424,3.228,426,3.228,451,1.804,452,2.568,453,4.063]],["title/index.html",[19,0.568,454,2.207,455,2.207]],["body/index.html",[0,1.269,4,0.739,23,0.043,27,2.282,40,1.177,49,0.043,50,0.043,66,1.893,90,1.893,208,2.992,430,2.282,433,1.893,456,3.766,457,2.873,458,4.202,459,4.202,460,2.282,461,2.873,462,2.873,463,3.766,464,4.63,465,4.842,466,2.873,467,2.873,468,2.873,469,2.873,470,2.873,471,2.873,472,2.873,473,2.873,474,2.873,475,2.873,476,2.873,477,4.202,478,4.202,479,2.873,480,4.46,481,2.873,482,2.873,483,2.873,484,2.873,485,3.766,486,3.766,487,4.46,488,2.873,489,3.766,490,2.873,491,4.752,492,2.873,493,2.873,494,2.873,495,3.766,496,2.873,497,2.873,498,2.873,499,2.873,500,2.873,501,2.873,502,4.202,503,2.873,504,2.873,505,2.873,506,1.893,507,2.873,508,2.873]],["title/modules.html",[53,1.691]],["body/modules.html",[23,0.052,49,0.052,50,0.052,52,2.195,53,1.877,63,1.877,72,2.593,509,3.935,510,3.935,511,4.576,512,3.935,513,3.935]],["title/overview.html",[506,2.336]],["body/overview.html",[1,1.762,2,1.846,23,0.057,34,1.579,42,1.582,45,1.582,49,0.047,50,0.047,51,1.846,52,2.879,53,1.579,54,1.846,55,2.629,56,2.629,57,2.629,58,2.181,59,2.629,60,2.629,61,2.629,62,2.629,63,2.143,64,3.276,65,2.629,66,2.181,227,1.846,238,2.629,368,2.181,394,1.846,506,2.181,514,4.123,515,3.31]],["title/properties.html",[20,1.289,433,1.455]],["body/properties.html",[20,1.653,23,0.055,49,0.053,50,0.053,460,3.203,516,4.032]],["title/routes.html",[84,2.336]],["body/routes.html",[23,0.053,49,0.053,50,0.053,84,2.69]],["title/miscellaneous/variables.html",[451,1.231,517,2.498]],["body/miscellaneous/variables.html",[19,0.86,22,1.067,23,0.06,25,2.734,26,1.98,46,0.86,49,0.047,50,0.047,153,2.656,191,1.98,206,1.595,223,1.595,224,1.595,245,1.595,246,1.595,250,1.865,314,2.656,369,1.865,370,2.203,371,2.203,418,3.296,419,3.296,451,1.865,517,2.656,518,3.344,519,3.344,520,3.344,521,3.344,522,3.344,523,3.344,524,3.344,525,3.344,526,3.344,527,3.344]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":227,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":516,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["007bff",{"_index":392,"title":{},"body":{"components/MessageComponent.html":{}}}],["0px",{"_index":386,"title":{},"body":{"components/MessageComponent.html":{}}}],["1",{"_index":238,"title":{},"body":{"components/ChatBoxComponent.html":{},"overview.html":{}}}],["1.1em",{"_index":391,"title":{},"body":{"components/MessageComponent.html":{}}}],["1.2em",{"_index":393,"title":{},"body":{"components/MessageComponent.html":{}}}],["1.3.5",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":354,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{}}}],["10px",{"_index":345,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["15.2.0",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["15.2.6",{"_index":461,"title":{},"body":{"index.html":{}}}],["2",{"_index":514,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":515,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":364,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["4.7.3",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":384,"title":{},"body":{"components/MessageComponent.html":{}}}],["60px",{"_index":350,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["60vh",{"_index":352,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["7.8.0",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["absolute",{"_index":348,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["acceder",{"_index":241,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["activatedroute",{"_index":105,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["actual_component",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["add",{"_index":498,"title":{},"body":{"index.html":{}}}],["ademas",{"_index":160,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["al",{"_index":253,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["angular",{"_index":458,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/MessageService.html":{}}}],["angular/compiler",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":85,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"dependencies.html":{}}}],["anterior",{"_index":233,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["app.component",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":470,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":52,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":63,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arr.some(m",{"_index":327,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["array",{"_index":217,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["array.isarray(result",{"_index":219,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["artifacts",{"_index":481,"title":{},"body":{"index.html":{}}}],["asigna",{"_index":298,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["assistant",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":356,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["automatically",{"_index":471,"title":{},"body":{"index.html":{}}}],["available",{"_index":513,"title":{},"body":{"modules.html":{}}}],["axios",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":343,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["behaviorsubject",{"_index":406,"title":{},"body":{"injectables/MessageService.html":{}}}],["bold",{"_index":389,"title":{},"body":{"components/MessageComponent.html":{}}}],["bootstrap",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bot",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["botones",{"_index":177,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["bottom",{"_index":383,"title":{},"body":{"components/MessageComponent.html":{}}}],["botón",{"_index":123,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box",{"_index":92,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["box.component",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["box.component.css",{"_index":93,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.html",{"_index":94,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts",{"_index":89,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["box.component.ts:13",{"_index":192,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:14",{"_index":193,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:15",{"_index":108,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:161",{"_index":113,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:172",{"_index":180,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:32",{"_index":135,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:71",{"_index":186,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box.component.ts:80",{"_index":165,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["box/chat",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":511,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":480,"title":{},"body":{"index.html":{}}}],["bundledwebruntime",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":500,"title":{},"body":{"index.html":{}}}],["capacitor.config.ts",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["capacitor/cli",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caso",{"_index":294,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["change",{"_index":473,"title":{},"body":{"index.html":{}}}],["chat",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["chatbot",{"_index":337,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["chatboxcomponent",{"_index":42,"title":{"components/ChatBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":505,"title":{},"body":{"index.html":{}}}],["child(even",{"_index":361,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["child(odd",{"_index":360,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["choice",{"_index":494,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["cli",{"_index":459,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":475,"title":{},"body":{"index.html":{}}}],["color",{"_index":362,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["com.watson.app",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":495,"title":{},"body":{"index.html":{}}}],["como",{"_index":145,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["componente",{"_index":137,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"overview.html":{}}}],["comprobamos",{"_index":216,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["comprueba",{"_index":286,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["con",{"_index":197,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["condición",{"_index":232,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["config",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conjunto",{"_index":176,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["consola",{"_index":184,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(item.output.generic",{"_index":273,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(messages",{"_index":272,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["console.log(this.history",{"_index":312,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["const",{"_index":86,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["constructor(http",{"_index":398,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(private",{"_index":408,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(route",{"_index":104,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["container",{"_index":385,"title":{},"body":{"components/MessageComponent.html":{}}}],["contrario",{"_index":315,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["coverage",{"_index":414,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creamos",{"_index":201,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cual",{"_index":171,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cualquiera",{"_index":166,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cuando",{"_index":118,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["cumple",{"_index":231,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["de",{"_index":161,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["debería",{"_index":291,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["debug",{"_index":182,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["declarations",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"miscellaneous/variables.html":{}}}],["default_message",{"_index":191,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":300,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["dejara",{"_index":296,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["del",{"_index":127,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["dependencies",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":467,"title":{},"body":{"index.html":{}}}],["development",{"_index":462,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":168,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["dialognodeoutput",{"_index":367,"title":{"interfaces/DialogNodeOutput.html":{}},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["directamente",{"_index":242,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["directives",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":479,"title":{},"body":{"index.html":{}}}],["directory",{"_index":484,"title":{},"body":{"index.html":{}}}],["dist",{"_index":483,"title":{},"body":{"index.html":{}}}],["dist/frontend",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["dynamic",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":492,"title":{},"body":{"index.html":{}}}],["efefef",{"_index":365,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ejecuta",{"_index":117,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["el",{"_index":119,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["elegir",{"_index":178,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["elemento",{"_index":290,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["en",{"_index":149,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["end",{"_index":491,"title":{},"body":{"index.html":{}}}],["entities",{"_index":370,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["entonces",{"_index":336,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["envia",{"_index":151,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["enviamos",{"_index":207,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["enviar",{"_index":187,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["error",{"_index":321,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["es",{"_index":143,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["escrito",{"_index":147,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["esta",{"_index":138,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["este",{"_index":155,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["esto",{"_index":167,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["execute",{"_index":489,"title":{},"body":{"index.html":{}}}],["existe",{"_index":134,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["existeoutputoption",{"_index":424,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["existeoutputoption(item.output.generic.length",{"_index":276,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["existeoutputoption(length",{"_index":317,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["existir",{"_index":297,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["exports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":314,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/variables.html":{}}}],["falta",{"_index":289,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ffffff",{"_index":363,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["files",{"_index":474,"title":{},"body":{"index.html":{}}}],["first",{"_index":497,"title":{},"body":{"index.html":{}}}],["font",{"_index":387,"title":{},"body":{"components/MessageComponent.html":{}}}],["forma",{"_index":239,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["forzamos",{"_index":267,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["frontend",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["funcion",{"_index":181,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["función",{"_index":114,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":316,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{}}}],["functions",{"_index":452,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":501,"title":{},"body":{"index.html":{}}}],["generate",{"_index":477,"title":{},"body":{"index.html":{}}}],["generated",{"_index":457,"title":{},"body":{"index.html":{}}}],["generic",{"_index":224,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generic[1].response_type",{"_index":319,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["getbuttonvalue",{"_index":98,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["getbuttonvalue(option",{"_index":112,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["getting",{"_index":454,"title":{"index.html":{}},"body":{}}],["go",{"_index":504,"title":{},"body":{"index.html":{}}}],["graph",{"_index":512,"title":{},"body":{"modules.html":{}}}],["guardamos",{"_index":213,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["guarde",{"_index":158,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["ha",{"_index":204,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["habido",{"_index":320,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hace",{"_index":142,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hacemos",{"_index":257,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["height",{"_index":351,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["help",{"_index":502,"title":{},"body":{"index.html":{}}}],["historial",{"_index":159,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["history",{"_index":95,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["history.some(arr",{"_index":326,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hola",{"_index":148,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["http",{"_index":401,"title":{},"body":{"injectables/MessageService.html":{}}}],["http://localhost:4200",{"_index":469,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/send",{"_index":410,"title":{},"body":{"injectables/MessageService.html":{}}}],["httpclient",{"_index":399,"title":{},"body":{"injectables/MessageService.html":{}}}],["httpclientmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["https://placehold.it/300x300",{"_index":302,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["hubiera",{"_index":146,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["identifier",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["iguales",{"_index":325,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["image",{"_index":285,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["imagen",{"_index":175,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["imagenes",{"_index":304,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["implements",{"_index":90,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["importar",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imprime",{"_index":183,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["inicia",{"_index":139,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["inicial",{"_index":202,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["inicializa",{"_index":136,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["initialmessage",{"_index":205,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["injectable",{"_index":394,"title":{"injectables/MessageService.html":{}},"body":{"injectables/MessageService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":395,"title":{},"body":{"injectables/MessageService.html":{}}}],["input",{"_index":189,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["inputs",{"_index":377,"title":{},"body":{"components/MessageComponent.html":{}}}],["intents",{"_index":371,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":366,"title":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{}}}],["interfaces",{"_index":368,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"overview.html":{}}}],["item.output",{"_index":228,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic",{"_index":229,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic.length",{"_index":230,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].options",{"_index":251,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].response_type",{"_index":247,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].source",{"_index":248,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].text",{"_index":244,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[0].title",{"_index":249,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].options",{"_index":280,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].response_type",{"_index":278,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].text",{"_index":307,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["item.output.generic[1].title",{"_index":279,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["json",{"_index":339,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["karma",{"_index":490,"title":{},"body":{"index.html":{}}}],["la",{"_index":128,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["label",{"_index":372,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}}}],["las",{"_index":303,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["le",{"_index":288,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"overview.html":{}}}],["length",{"_index":225,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":340,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["literal",{"_index":373,"title":{},"body":{"interfaces/Message.html":{}}}],["llegan",{"_index":260,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["lo",{"_index":140,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["m.response_type",{"_index":330,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["m.source",{"_index":332,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["m.title",{"_index":328,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["manda",{"_index":125,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["mandamos",{"_index":252,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["margin",{"_index":344,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["matching",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mayor",{"_index":226,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["mensaje",{"_index":152,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["mensajes",{"_index":210,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["message",{"_index":46,"title":{"interfaces/Message.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message.component.css",{"_index":375,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.component.html",{"_index":376,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.owner",{"_index":380,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.response_type",{"_index":284,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["message.source",{"_index":301,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["message.text",{"_index":381,"title":{},"body":{"components/MessageComponent.html":{}}}],["message.title",{"_index":382,"title":{},"body":{"components/MessageComponent.html":{}}}],["message/message.component",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["message=${encodeuricomponent(message.text",{"_index":412,"title":{},"body":{"injectables/MessageService.html":{}}}],["messagecomponent",{"_index":45,"title":{"components/MessageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messages",{"_index":218,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["messages.foreach((item",{"_index":221,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[0].response_type",{"_index":334,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[0].source",{"_index":333,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[1].response_type",{"_index":331,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messages[1].title",{"_index":329,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["messageservice",{"_index":107,"title":{"injectables/MessageService.html":{}},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["methods",{"_index":97,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["miscellaneous",{"_index":451,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/message",{"_index":194,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["module",{"_index":51,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":53,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":503,"title":{},"body":{"index.html":{}}}],["mostrarlo",{"_index":162,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":468,"title":{},"body":{"index.html":{}}}],["need",{"_index":496,"title":{},"body":{"index.html":{}}}],["new",{"_index":430,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ng",{"_index":465,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":99,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["ni",{"_index":335,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["noexisteenhistorial",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["noexisteenhistorial([message",{"_index":281,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["noexisteenhistorial(messages",{"_index":322,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["none",{"_index":342,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["nos",{"_index":156,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["nuevo",{"_index":234,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["number",{"_index":318,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["o",{"_index":131,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["objeto",{"_index":196,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["objetos",{"_index":263,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["observable",{"_index":404,"title":{},"body":{"injectables/MessageService.html":{}}}],["oninit",{"_index":91,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["onsubmit",{"_index":100,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["onsubmit(res",{"_index":164,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option",{"_index":129,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["option.label",{"_index":338,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option.value",{"_index":309,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option.value.input",{"_index":310,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["option.value.input.text",{"_index":311,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["optional",{"_index":110,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["optionmessage",{"_index":277,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["options",{"_index":250,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":295,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["otras",{"_index":262,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":223,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["overflow",{"_index":355,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["overview",{"_index":506,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":245,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":433,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":346,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["page",{"_index":508,"title":{},"body":{"index.html":{}}}],["para",{"_index":154,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["param",{"_index":200,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["parameters",{"_index":109,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/functions.html":{}}}],["pasa",{"_index":308,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["pasar",{"_index":292,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["pero",{"_index":293,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["platform",{"_index":493,"title":{},"body":{"index.html":{}}}],["podemos",{"_index":240,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["por",{"_index":299,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["posición",{"_index":243,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["position",{"_index":347,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["predeterminado",{"_index":198,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["primero",{"_index":287,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["printhistory",{"_index":101,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["private",{"_index":199,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["project",{"_index":456,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"properties.html":{}}}],["providedin",{"_index":407,"title":{},"body":{"injectables/MessageService.html":{}}}],["providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["puede",{"_index":172,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["pulsa",{"_index":121,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["que",{"_index":115,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["query",{"_index":256,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["query1",{"_index":190,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["querystring",{"_index":411,"title":{},"body":{"injectables/MessageService.html":{}}}],["recibe",{"_index":237,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["recibimos",{"_index":212,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["recorremos",{"_index":220,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["reference",{"_index":507,"title":{},"body":{"index.html":{}}}],["reload",{"_index":472,"title":{},"body":{"index.html":{}}}],["res",{"_index":179,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["res.options?.values",{"_index":265,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["res.text",{"_index":266,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responda",{"_index":157,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["response",{"_index":96,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["response_type",{"_index":246,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["respuesta",{"_index":170,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["result",{"_index":215,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["results",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":283,"title":{},"body":{"components/ChatBoxComponent.html":{},"injectables/MessageService.html":{}}}],["returns",{"_index":130,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{}}}],["right",{"_index":357,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/MessageService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["route",{"_index":111,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["router",{"_index":106,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["routermodule",{"_index":83,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":87,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":84,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":82,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":358,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["run",{"_index":464,"title":{},"body":{"index.html":{}}}],["running",{"_index":485,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":405,"title":{},"body":{"injectables/MessageService.html":{},"dependencies.html":{}}}],["sabemos",{"_index":235,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["scaffolding",{"_index":476,"title":{},"body":{"index.html":{}}}],["se",{"_index":116,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["sea",{"_index":268,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["sean",{"_index":324,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["segundo",{"_index":274,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["sendmessage",{"_index":397,"title":{},"body":{"injectables/MessageService.html":{}}}],["sendmessage(message",{"_index":402,"title":{},"body":{"injectables/MessageService.html":{}}}],["ser",{"_index":173,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["serve",{"_index":466,"title":{},"body":{"index.html":{}}}],["server",{"_index":463,"title":{},"body":{"index.html":{}}}],["services/message.service",{"_index":195,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["servicio",{"_index":209,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["si",{"_index":133,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["siempre",{"_index":236,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["simplemente",{"_index":124,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["simular",{"_index":144,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["size",{"_index":390,"title":{},"body":{"components/MessageComponent.html":{}}}],["solo",{"_index":203,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"index.html":{}}}],["src/.../chat",{"_index":453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../message.ts",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":81,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/chat",{"_index":88,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/message/message.component.ts",{"_index":374,"title":{},"body":{"components/MessageComponent.html":{},"coverage.html":{}}}],["src/app/message/message.component.ts:10",{"_index":378,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/message/message.component.ts:14",{"_index":379,"title":{},"body":{"components/MessageComponent.html":{}}}],["src/app/models/message.ts",{"_index":369,"title":{},"body":{"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/message.service.ts",{"_index":396,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/services/message.service.ts:10",{"_index":400,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:14",{"_index":403,"title":{},"body":{"injectables/MessageService.html":{}}}],["started",{"_index":455,"title":{"index.html":{}},"body":{}}],["statements",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":482,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/functions.html":{}}}],["strings",{"_index":261,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["striped:nth",{"_index":359,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["style",{"_index":341,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["submitmessage",{"_index":102,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["submitmessage(query1",{"_index":185,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["support",{"_index":509,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":510,"title":{},"body":{"modules.html":{}}}],["table",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["test",{"_index":488,"title":{},"body":{"index.html":{}}}],["testing",{"_index":499,"title":{},"body":{"index.html":{}}}],["tests",{"_index":487,"title":{},"body":{"index.html":{}}}],["text",{"_index":206,"title":{},"body":{"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"miscellaneous/variables.html":{}}}],["textmessage",{"_index":306,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["texto",{"_index":174,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.history",{"_index":282,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.history.push([message",{"_index":254,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.history.push([this.message",{"_index":270,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.http.get(url",{"_index":413,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.message",{"_index":269,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.messageservice.sendmessage(initialmessage).subscribe((result",{"_index":211,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.messageservice.sendmessage(this.message).subscribe((result",{"_index":271,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["this.onsubmit(query1",{"_index":255,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tiene",{"_index":222,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tipo",{"_index":275,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{}}}],["titulo",{"_index":323,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["toma",{"_index":188,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["top",{"_index":349,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["true",{"_index":313,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["tslib",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"components/MessageComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":264,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["un",{"_index":122,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":169,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["unico",{"_index":141,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["unit",{"_index":486,"title":{},"body":{"index.html":{}}}],["url",{"_index":409,"title":{},"body":{"injectables/MessageService.html":{}}}],["use",{"_index":478,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":120,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["vacío",{"_index":132,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["valor",{"_index":126,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"interfaces/DialogNodeOutput.html":{},"interfaces/Message.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["variable",{"_index":214,"title":{},"body":{"components/ChatBoxComponent.html":{},"coverage.html":{}}}],["variables",{"_index":517,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veces",{"_index":259,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["version",{"_index":460,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":208,"title":{},"body":{"components/ChatBoxComponent.html":{},"index.html":{}}}],["vienen",{"_index":305,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["void",{"_index":163,"title":{},"body":{"components/ChatBoxComponent.html":{},"components/MessageComponent.html":{}}}],["watson",{"_index":153,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/variables.html":{}}}],["webdir",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":388,"title":{},"body":{"components/MessageComponent.html":{}}}],["width",{"_index":353,"title":{},"body":{"components/ChatBoxComponent.html":{}}}],["y",{"_index":150,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["ya",{"_index":258,"title":{},"body":{"components/ChatBoxComponent.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'frontend'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'MessageComponent', 'selector': 'app-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatBoxComponent\n\nChatBoxComponent\n\nAppModule -->\n\nChatBoxComponent->AppModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nAppModule -->\n\nMessageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChatBoxComponent\n                        \n                        \n                            MessageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n// Importar MessageComponent\nimport { MessageComponent } from './message/message.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatBoxComponent,\n    MessageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatBoxComponent.html":{"url":"components/ChatBoxComponent.html","title":"component - ChatBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chat-box/chat-box.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-box\n            \n\n            \n                styleUrls\n                ./chat-box.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chat-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                history\n                            \n                            \n                                message\n                            \n                            \n                                response\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                printHistory\n                            \n                            \n                                submitMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/chat-box/chat-box.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getButtonValue\n                        \n                    \n                \n            \n            \n                \ngetButtonValue(option: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:161\n                \n            \n\n\n            \n                \n                    Función que se ejecuta cuando el usuario pulsa un botón\nSimplemente manda el valor del botón a la función onSubmit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        el valor del botón o un string vacío si no existe\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:32\n                \n            \n\n\n            \n                \n                    Inicializa el componente\nEsta función se ejecuta cuando se inicia el componente\nLo unico que hace es simular como si el usuario hubiera escrito \"Hola\" en el chat\ny envia el mensaje a Watson, para que este nos responda y se guarde en el historial\nademas de mostrarlo en el chat\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(res: Message | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:80\n                \n            \n\n\n            \n                \n                    Función que se ejecuta cuando el usuario manda un mensaje cualquiera a Watson\nEsto nos devuelve una respuesta de watson, la cual puede ser un texto, una imagen o un conjunto de botones para elegir\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Message | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        printHistory\n                        \n                    \n                \n            \n            \n                \nprintHistory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:172\n                \n            \n\n\n            \n                \n                    Funcion de debug, imprime el historial en la consola\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitMessage\n                        \n                    \n                \n            \n            \n                \nsubmitMessage(query1: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-box/chat-box.component.ts:71\n                \n            \n\n\n            \n                \n                    Función que se ejecuta cuando se pulsa el botón de enviar\nToma el valor del input y lo envia a la función onSubmit\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/chat-box/chat-box.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : { ...DEFAULT_MESSAGE }\n                    \n                \n                    \n                        \n                                Defined in src/app/chat-box/chat-box.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/chat-box/chat-box.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Message, DEFAULT_MESSAGE } from '../models/message';\nimport { MessageService } from '../services/message.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css']\n})\nexport class ChatBoxComponent implements OnInit {\n\n  message: Message = { ...DEFAULT_MESSAGE }; // Inicializa el objeto de mensaje con el valor predeterminado\n  response: Message[] = [];\n  history: Message[][] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private messageService: MessageService\n  ) { }\n\n  /**\n   * Inicializa el componente\n   * Esta función se ejecuta cuando se inicia el componente\n   * Lo unico que hace es simular como si el usuario hubiera escrito \"Hola\" en el chat\n   * y envia el mensaje a Watson, para que este nos responda y se guarde en el historial\n   * ademas de mostrarlo en el chat\n   * @param void\n   * @returns void\n   */\n  ngOnInit() {\n    // Creamos un mensaje inicial para que Watson nos responda\n    // Este mensaje es solo para simular que el usuario ha escrito \"Hola\" en el chat y que Watson nos responda\n    const initialMessage: Message = {\n      ...DEFAULT_MESSAGE,\n      text: 'Hola'\n    };\n    // Enviamos el mensaje a Watson, via el servicio de mensajes\n    this.messageService.sendMessage(initialMessage).subscribe((result: Message[]) => {\n      // Recibimos la respuesta de Watson y la guardamos en la variable result\n      // Comprobamos si result es un array, si lo es, lo guardamos en la variable messages\n      const messages = Array.isArray(result) ? result : [result];\n      // Recorremos el array de mensajes\n      messages.forEach((item: Message) => {\n        // Comprobamos si el mensaje tiene un output y si este output tiene un generic y si este generic tiene un length mayor que 0\n        if (item.output && item.output.generic && item.output.generic.length > 0) {\n          // Si se cumple la condición anterior, creamos un nuevo mensaje con el texto de la respuesta de Watson\n          // Como sabemos que siempre se recibe 1 mensaje de watson de esta forma, podemos acceder directamente a la posición 0 del array\n          const message: Message = {\n            ...DEFAULT_MESSAGE,\n            text: item.output.generic[0].text,\n            owner: 'Watson: ',\n            response_type: item.output.generic[0].response_type,\n            source: item.output.generic[0].source || '',\n            title: item.output.generic[0].title || '',\n            options: item.output.generic[0].options || []\n          };\n          //Mandamos el mensaje al historial\n          this.history.push([message]);\n        }\n      });\n    });\n  }\n\n  /**\n   * Función que se ejecuta cuando se pulsa el botón de enviar\n   * Toma el valor del input y lo envia a la función onSubmit\n   * @param query1 \n   */\n  submitMessage(query1: string) {\n    this.onSubmit(query1);\n  }\n\n  /**\n   * Función que se ejecuta cuando el usuario manda un mensaje cualquiera a Watson\n   * Esto nos devuelve una respuesta de watson, la cual puede ser un texto, una imagen o un conjunto de botones para elegir\n   * @param res \n   */\n  onSubmit(res: Message | string) {\n    // Comprobamos si res es un string, si lo es, lo guardamos en la variable query, hacemos esto ya a veces nos llegan strings y otras veces objetos\n    const query = typeof res === 'string' ? res : res.options?.values || res.text || '';\n    // Como a veces nos llegan objetos, simplemente forzamos a que query sea un string\n    this.message = {\n      ...DEFAULT_MESSAGE,\n      response_type: 'text',\n      text: query as string,\n      owner: 'Usuario: '\n    };\n\n    // Mandamos el mensaje al historial\n    this.history.push([this.message]);\n\n    // Enviamos el mensaje a Watson, via el servicio de mensajes\n    this.messageService.sendMessage(this.message).subscribe((result: Message[]) => {\n      // Recibimos la respuesta de Watson y la guardamos en la variable result\n      // Comprobamos si result es un array, si lo es, lo guardamos en la variable messages\n      const messages = Array.isArray(result) ? result : [result];\n      console.log(messages);\n      // Recorremos el array de mensajes\n      messages.forEach((item: Message) => {\n        if (item.output && item.output.generic && item.output.generic.length > 0) {\n          console.log(item.output.generic)\n          const message: Message = {\n            ...DEFAULT_MESSAGE,\n            text: item.output.generic[0].text,\n            owner: 'Watson: ',\n            response_type: item.output.generic[0].response_type,\n            source: item.output.generic[0].source || '',\n            title: item.output.generic[0].title || '',\n            options: item.output.generic[0].options || []\n          };\n          //Comprobamos si existe un segundo output y si este es de tipo option\n          if (existeOutputOption(item.output.generic.length, item.output.generic)) {\n            //Si existe, creamos un nuevo mensaje con el segundo output\n            const optionMessage: Message = {\n              ...DEFAULT_MESSAGE,\n              response_type: item.output.generic[1].response_type,\n              title: item.output.generic[1].title,\n              options: item.output.generic[1].options,\n            }\n            //Comprobamos si el mensaje ya existe en el historial\n            if (noExisteEnHistorial([message, optionMessage], this.history, item.output.generic[1].response_type)) {\n              this.history.push([message, optionMessage]);\n              return;\n            }\n          }\n          //Comprobamos si el mensaje es una imagen\n          if (message.response_type === 'image') {\n            //Comprueba primero si la imagen le falta un elemento source. No debería de pasar, pero en caso de que la imagen original dejara de existir, se le asigna una imagen por defecto\n            if (message.source === '') {\n              message.source = 'https://placehold.it/300x300';\n            }\n            //Las imagenes siempre vienen con un mensaje de texto, por lo que creamos un nuevo mensaje con el texto de la imagen\n            const textMessage: Message = {\n              ...DEFAULT_MESSAGE,\n              text: item.output.generic[1].text,\n              owner: 'Watson: ',\n              response_type: 'text'\n            };\n            //Comprobamos si el mensaje ya existe en el historial\n            if (noExisteEnHistorial([message, textMessage], this.history, message.response_type)) {\n              this.history.push([message, textMessage]);\n            }\n          } else {\n            //Guardamos el mensaje en el historial, este else solo pasa cuando no es una imagen o un option\n            this.history.push([message]);\n          }\n        }\n      });\n    });\n\n  }\n\n  /**\n   * Función que se ejecuta cuando el usuario pulsa un botón\n   * Simplemente manda el valor del botón a la función onSubmit\n   * @param option \n   * @returns el valor del botón o un string vacío si no existe\n   */\n  getButtonValue(option: any): string {\n    if (option.value && option.value.input && option.value.input.text) {\n      return option.value.input.text;\n    } else {\n      return '';\n    }\n  }\n  \n  /**\n   * Funcion de debug, imprime el historial en la consola\n   */\n  printHistory() {\n    console.log(this.history);\n  }\n\n}\n/**\n * Función que comprueba si existe un segundo output y si este es de tipo option\n * \n * @param length \n * @param generic \n * @returns  true si existe un segundo output y este es de tipo option, false en caso contrario\n */\nfunction existeOutputOption(length: number, generic: any) {\n  if (length > 1) {\n    if (generic[1].response_type === 'option') {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Función que comprueba si un mensaje ya existe en el historial\n * @param messages \n * @param history \n * @param response_type \n * @returns true si el mensaje no existe en el historial, false en caso contrario o -1 si ha habido un error\n */\nfunction noExisteEnHistorial(messages: Message[], history: Message[][], response_type: string) {\n  //Comprobamos el tipo de respuesta que recibimos\n  if (response_type === 'option') {\n    //Si es de tipo option, comprobamos que el titulo y el tipo de respuesta sean iguales\n    return !history.some(arr => arr.some(m => m.title === messages[1].title && m.response_type === messages[1].response_type));\n  }\n  if (response_type === 'image') {\n    //Si es de tipo image, comprobamos que el source y el tipo de respuesta sean iguales\n    return !history.some(arr => arr.some(m => m.source === messages[0].source && m.response_type === messages[0].response_type));\n  }\n  //Si no es de tipo option ni de tipo image, entonces es de tipo text o ha habido un error\n  return -1;\n}\n\n    \n\n    \n        \n  \n    \n      ChatBot\n      \n\n      \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                \n                \n                  {{ option.label }}\n                \n              \n            \n          \n          \n        \n      \n\n      {{ history | json }} -->\n\n      \n        \n        Enviar\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./chat-box.component.css\n                \n                .chat {\n  list-style: none;\n  background: none;\n  margin: 10px;\n  padding: 10px;\n  position: absolute;\n  top: 60px;\n  height: 60vh;\n  width: 100%;\n  overflow-y: auto;\n  padding-right: 10px;\n}\n\n.row-striped:nth-child(odd),\n.row-striped:nth-child(even) {\n  background-color: #ffffff;\n  padding: 3px;\n}\n\n.row-striped:nth-child(odd) {\n  background-color: #efefef;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ChatBot                                                                                                                                                                                                  {{ option.label }}                                                                                  {{ history | json }} -->                      Enviar            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'MessageComponent', 'selector': 'app-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogNodeOutput.html":{"url":"interfaces/DialogNodeOutput.html","title":"interface - DialogNodeOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogNodeOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            generic\n                                        \n                                \n                                \n                                        \n                                            intents\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generic:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intents:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  response_type: string;\n  source?: string;\n  text: string;\n  owner: string;\n  title?: string;\n  options?: { label: string, value: string }[];\n  output?: DialogNodeOutput;\n}\n\nexport interface DialogNodeOutput {\n  entities: any[];\n  generic: any[];\n  intents: any[];\n}\n\nexport const DEFAULT_MESSAGE: Message = {\n  response_type: '',\n  text: '',\n  owner: '',\n  options: [],\n  output: { entities: [], generic: [], intents: [] }\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            response_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         DialogNodeOutput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DialogNodeOutput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n  response_type: string;\n  source?: string;\n  text: string;\n  owner: string;\n  title?: string;\n  options?: { label: string, value: string }[];\n  output?: DialogNodeOutput;\n}\n\nexport interface DialogNodeOutput {\n  entities: any[];\n  generic: any[];\n  intents: any[];\n}\n\nexport const DEFAULT_MESSAGE: Message = {\n  response_type: '',\n  text: '',\n  owner: '',\n  options: [],\n  output: { entities: [], generic: [], intents: [] }\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageComponent.html":{"url":"components/MessageComponent.html","title":"component - MessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/message/message.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message\n            \n\n            \n                styleUrls\n                ./message.component.css\n            \n\n\n\n            \n                templateUrl\n                ./message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/message/message.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         Message\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/message/message.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/message/message.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Message } from '../models/message';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n  @Input() message!: Message;\n  \n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n\n\n\n    \n\n    \n        \n    {{ message.owner }}\n    \n    {{ message.text }}\n    {{ message.title }}\n  \n  \n    \n\n    \n                \n                    ./message.component.css\n                \n                .message {\n    margin-bottom: 5px;\n  }\n  \n  .message-container {\n    margin: 10px 10px 10px 0px;\n  }\n  \n  .message-owner {\n    font-weight: bold;\n    font-size: 1.1em;\n    color: #007bff;\n    margin-bottom: 3px;\n  }\n  \n  .message-text {\n    margin: 0;\n    font-size: 1.2em;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ message.owner }}        {{ message.text }}    {{ message.title }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'MessageComponent', 'selector': 'app-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Message } from '../models/message';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(private http: HttpClient) { }\n\n  sendMessage(message: Message): Observable {\n    const url = `http://localhost:8080/send`;\n    const queryString = `?message=${encodeURIComponent(message.text)}`;\n    return this.http.get(url + queryString);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            component\n            ChatBoxComponent\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            existeOutputOption\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/chat-box/chat-box.component.ts\n            \n            function\n            noExisteEnHistorial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/message/message.component.ts\n            \n            component\n            MessageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            interface\n            DialogNodeOutput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/message.ts\n            \n            variable\n            DEFAULT_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @capacitor/android : ^4.7.3\n        \n            @capacitor/cli : ^4.7.3\n        \n            @capacitor/core : ^4.7.3\n        \n            axios : ^1.3.5\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            existeOutputOption   (src/.../chat-box.component.ts)\n                        \n                        \n                            noExisteEnHistorial   (src/.../chat-box.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/chat-box/chat-box.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        existeOutputOption\n                        \n                    \n                \n            \n            \n                \nexisteOutputOption(length: number, generic: any)\n                \n            \n\n\n\n\n            \n                \n                    Función que comprueba si existe un segundo output y si este es de tipo option\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    generic\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noExisteEnHistorial\n                        \n                    \n                \n            \n            \n                \nnoExisteEnHistorial(messages, history, response_type: string)\n                \n            \n\n\n\n\n            \n                \n                    Función que comprueba si un mensaje ya existe en el historial\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messages\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    history\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response_type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 15.2.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatBoxComponent\n\nChatBoxComponent\n\nAppModule -->\n\nChatBoxComponent->AppModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nAppModule -->\n\nMessageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            DEFAULT_MESSAGE   (src/.../message.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'com.watson.app',\n  appName: 'Watson Assistant Bot',\n  webDir: 'dist/frontend',\n  bundledWebRuntime: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/models/message.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : {\n  response_type: '',\n  text: '',\n  owner: '',\n  options: [],\n  output: { entities: [], generic: [], intents: [] }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
